{
  "specversion": "0.5",
  "registryid": "CloudEvents",
  "self": "#/",
  "xid": "/",
  "epoch": 2,
  "createdat": "2025-02-25T20:47:54.438948574Z",
  "modifiedat": "2025-02-26T13:09:22.902623885Z",
  "capabilities": {
    "enforcecompatibility": false,
    "flags": [
      "doc",
      "epoch",
      "filter",
      "inline",
      "nodefaultversionid",
      "nodefaultversionsticky",
      "noepoch",
      "noreadonly",
      "offered",
      "schema",
      "setdefaultversionid",
      "specversion"
    ],
    "maxversions": 0,
    "mutable": [
      "capabilities",
      "entities",
      "model"
    ],
    "pagination": false,
    "schemas": [
      "xregistry-json/0.5"
    ],
    "shortself": false,
    "specversions": [
      "0.5"
    ],
    "sticky": true
  },
  "model": {
    "attributes": {
      "specversion": {
        "name": "specversion",
        "type": "string",
        "readonly": true,
        "immutable": true,
        "serverrequired": true
      },
      "registryid": {
        "name": "registryid",
        "type": "string",
        "immutable": true,
        "serverrequired": true
      },
      "self": {
        "name": "self",
        "type": "url",
        "readonly": true,
        "serverrequired": true
      },
      "xid": {
        "name": "xid",
        "type": "xid",
        "readonly": true,
        "serverrequired": true
      },
      "epoch": {
        "name": "epoch",
        "type": "uinteger",
        "serverrequired": true
      },
      "name": {
        "name": "name",
        "type": "string"
      },
      "description": {
        "name": "description",
        "type": "string"
      },
      "documentation": {
        "name": "documentation",
        "type": "url"
      },
      "labels": {
        "name": "labels",
        "type": "map",
        "item": {
          "type": "string"
        }
      },
      "createdat": {
        "name": "createdat",
        "type": "timestamp",
        "serverrequired": true
      },
      "modifiedat": {
        "name": "modifiedat",
        "type": "timestamp",
        "serverrequired": true
      }
    },
    "groups": {
      "endpoints": {
        "plural": "endpoints",
        "singular": "endpoint",
        "attributes": {
          "endpointid": {
            "name": "endpointid",
            "type": "string",
            "immutable": true,
            "serverrequired": true
          },
          "self": {
            "name": "self",
            "type": "url",
            "readonly": true,
            "serverrequired": true
          },
          "xid": {
            "name": "xid",
            "type": "xid",
            "readonly": true,
            "serverrequired": true
          },
          "epoch": {
            "name": "epoch",
            "type": "uinteger",
            "serverrequired": true
          },
          "name": {
            "name": "name",
            "type": "string"
          },
          "description": {
            "name": "description",
            "type": "string"
          },
          "documentation": {
            "name": "documentation",
            "type": "url"
          },
          "labels": {
            "name": "labels",
            "type": "map",
            "item": {
              "type": "string"
            }
          },
          "createdat": {
            "name": "createdat",
            "type": "timestamp",
            "serverrequired": true
          },
          "modifiedat": {
            "name": "modifiedat",
            "type": "timestamp",
            "serverrequired": true
          },
          "channel": {
            "name": "channel",
            "type": "string",
            "description": "tbd"
          },
          "deprecated": {
            "name": "deprecated",
            "type": "object",
            "description": "tbd",
            "attributes": {
              "alternative": {
                "name": "alternative",
                "type": "url",
                "description": "tbd"
              },
              "docs": {
                "name": "docs",
                "type": "url",
                "description": "tbd"
              },
              "effective": {
                "name": "effective",
                "type": "timestamp",
                "description": "tbd"
              },
              "removal": {
                "name": "removal",
                "type": "timestamp",
                "description": "tbd"
              },
              "*": {
                "name": "*",
                "type": "any"
              }
            }
          },
          "envelope": {
            "name": "envelope",
            "type": "string",
            "description": "Envelope metadata format identifier. If set, all definitions MUST use this format value",
            "ifValues": {
              "CloudEvents/1.0": {
                "siblingAttributes": {
                  "envelopeoptions": {
                    "name": "envelopeoptions",
                    "type": "object",
                    "description": "Envelope metadata constraints",
                    "attributes": {
                      "format": {
                        "name": "format",
                        "type": "string"
                      },
                      "mode": {
                        "name": "mode",
                        "type": "string",
                        "enum": [
                          "binary",
                          "structured"
                        ]
                      },
                      "*": {
                        "name": "*",
                        "type": "any"
                      }
                    }
                  }
                }
              }
            }
          },
          "messagegroups": {
            "name": "messagegroups",
            "type": "array",
            "description": "The message groups that are supported by this endpoint",
            "item": {
              "type": "uri"
            }
          },
          "protocol": {
            "name": "protocol",
            "type": "string",
            "description": "Endpoint protocol identifier. If set, all definitions MUST use this protocol value",
            "ifValues": {
              "AMQP/1.0": {
                "siblingAttributes": {
                  "protocoloptions": {
                    "name": "protocoloptions",
                    "type": "object",
                    "description": "Configuration information for this endpoint",
                    "attributes": {
                      "authorization": {
                        "name": "authorization",
                        "type": "array",
                        "description": "Authorization options. These are hints for the adapter for interacting with the authorization endpoint. This is not a credentials configuration",
                        "item": {
                          "type": "object",
                          "attributes": {
                            "authorityuri": {
                              "name": "authorityuri",
                              "type": "uri",
                              "description": "The authority uri where authorization shall be requested (if applicable)"
                            },
                            "granttypes": {
                              "name": "granttypes",
                              "type": "array",
                              "description": "The grant types that can be requested (if applicable)",
                              "item": {
                                "type": "string"
                              }
                            },
                            "resourceuri": {
                              "name": "resourceuri",
                              "type": "uri",
                              "description": "The resource uri for which authorization shall be granted (if applicable)"
                            },
                            "type": {
                              "name": "type",
                              "type": "string",
                              "description": "The authentication/authorization type. OAuth2, Plain, APIKey, and X509Cert are well-defined",
                              "clientrequired": true,
                              "serverrequired": true
                            },
                            "*": {
                              "name": "*",
                              "type": "any"
                            }
                          }
                        }
                      },
                      "connectionproperties": {
                        "name": "connectionproperties",
                        "type": "map",
                        "description": "An optional map of AMQP connection properties to use with the endpoint",
                        "item": {
                          "type": "string"
                        }
                      },
                      "deployed": {
                        "name": "deployed",
                        "type": "boolean",
                        "description": "If `true`, the endpoint metadata represents a public, live endpoint that is available for communication and a strict validator MAY test the liveness of the endpoint"
                      },
                      "distributionmode": {
                        "name": "distributionmode",
                        "type": "string",
                        "description": "The AMQP distribution mode for receivers. Can be 'move' or 'copy'.  A value of 'move' indicates an exclusive lock on the message. A value of 'copy' indicates a non-exclusive lock on the message",
                        "enum": [
                          "move",
                          "copy"
                        ]
                      },
                      "durable": {
                        "name": "durable",
                        "type": "boolean",
                        "description": "The AMQP durable flag. Whether the node is durable or transient"
                      },
                      "endpoints": {
                        "name": "endpoints",
                        "type": "array",
                        "description": "The network addresses that are for communication with the endpoint. The endpoints are ordered by preference, with the first endpoint being the preferred endpoint. Some protocol implementations might not support multiple endpoints, in which case all but the first endpoint might be ignored. Whether the URI just identifies a network host or links directly to a resource managed by the network host is protocol specific",
                        "item": {
                          "type": "object",
                          "attributes": {
                            "url": {
                              "name": "url",
                              "type": "url",
                              "description": "Network accessible location",
                              "clientrequired": true,
                              "serverrequired": true
                            },
                            "*": {
                              "name": "*",
                              "type": "any"
                            }
                          }
                        }
                      },
                      "linkproperties": {
                        "name": "linkproperties",
                        "type": "map",
                        "description": "An optional map of AMQP link properties to use with the endpoint",
                        "item": {
                          "type": "string"
                        }
                      },
                      "node": {
                        "name": "node",
                        "type": "string",
                        "description": "The AMQP node name. Commonly the name of a queue or a topic"
                      },
                      "*": {
                        "name": "*",
                        "type": "any"
                      }
                    }
                  }
                }
              },
              "HTTP": {
                "siblingAttributes": {
                  "protocoloptions": {
                    "name": "protocoloptions",
                    "type": "object",
                    "description": "Configuration information for this endpoint",
                    "attributes": {
                      "authorization": {
                        "name": "authorization",
                        "type": "array",
                        "description": "Authorization options. These are hints for the adapter for interacting with the authorization endpoint. This is not a credentials configuration",
                        "item": {
                          "type": "object",
                          "attributes": {
                            "authorityuri": {
                              "name": "authorityuri",
                              "type": "uri",
                              "description": "The authority uri where authorization shall be requested (if applicable)"
                            },
                            "granttypes": {
                              "name": "granttypes",
                              "type": "array",
                              "description": "The grant types that can be requested (if applicable)",
                              "item": {
                                "type": "string"
                              }
                            },
                            "resourceurl": {
                              "name": "resourceurl",
                              "type": "url",
                              "description": "The resource uri for which authorization shall be granted (if applicable)"
                            },
                            "type": {
                              "name": "type",
                              "type": "string",
                              "description": "The authentication/authorization type. OAuth2, Plain, APIKey, and X509Cert are well-defined",
                              "clientrequired": true,
                              "serverrequired": true
                            },
                            "*": {
                              "name": "*",
                              "type": "any"
                            }
                          }
                        }
                      },
                      "deployed": {
                        "name": "deployed",
                        "type": "boolean",
                        "description": "If `true`, the endpoint metadata represents a public, live endpoint that is available for communication and a strict validator MAY test the liveness of the endpoint"
                      },
                      "endpoints": {
                        "name": "endpoints",
                        "type": "array",
                        "description": "The network addresses that are for communication with the endpoint. The endpoints are ordered by preference, with the first endpoint being the preferred endpoint. Some protocol implementations might not support multiple endpoints, in which case all but the first endpoint might be ignored. Whether the URI just identifies a network host or links directly to a resource managed by the network host is protocol specific",
                        "item": {
                          "type": "object",
                          "attributes": {
                            "uri": {
                              "name": "uri",
                              "type": "uri",
                              "description": "Network accessible location",
                              "clientrequired": true,
                              "serverrequired": true
                            },
                            "*": {
                              "name": "*",
                              "type": "any"
                            }
                          }
                        }
                      },
                      "headers": {
                        "name": "headers",
                        "type": "array",
                        "description": "HTTP headers to use with the endpoint. The same header may be specified multiple times with different values. The HTTP header names are case insensitive",
                        "item": {
                          "type": "object",
                          "attributes": {
                            "name": {
                              "name": "name",
                              "type": "string",
                              "description": "HTTP header name",
                              "clientrequired": true,
                              "serverrequired": true
                            },
                            "value": {
                              "name": "value",
                              "type": "string",
                              "description": "HTTP header value",
                              "clientrequired": true,
                              "serverrequired": true
                            }
                          }
                        }
                      },
                      "method": {
                        "name": "method",
                        "type": "string",
                        "description": "The HTTP method name"
                      },
                      "query": {
                        "name": "query",
                        "type": "map",
                        "description": "HTTP query parameters",
                        "item": {
                          "type": "string"
                        }
                      },
                      "*": {
                        "name": "*",
                        "type": "any"
                      }
                    }
                  }
                }
              },
              "KAFKA": {
                "siblingAttributes": {
                  "protocoloptions": {
                    "name": "protocoloptions",
                    "type": "object",
                    "description": "Configuration information for this endpoint",
                    "attributes": {
                      "acks": {
                        "name": "acks",
                        "type": "integer",
                        "description": "The Apache Kafka acks setting to use. If no acks setting is specified, the default is -1"
                      },
                      "authorization": {
                        "name": "authorization",
                        "type": "array",
                        "description": "Authorization options. These are hints for the adapter for interacting with the authorization endpoint. This is not a credentials configuration",
                        "item": {
                          "type": "object",
                          "attributes": {
                            "authorityuri": {
                              "name": "authorityuri",
                              "type": "uri",
                              "description": "The authority uri where authorization shall be requested (if applicable)"
                            },
                            "granttypes": {
                              "name": "granttypes",
                              "type": "array",
                              "description": "The grant types that can be requested (if applicable)",
                              "item": {
                                "type": "string"
                              }
                            },
                            "resourceurl": {
                              "name": "resourceurl",
                              "type": "url",
                              "description": "The resource uri for which authorization shall be granted (if applicable)"
                            },
                            "type": {
                              "name": "type",
                              "type": "string",
                              "description": "The authentication/authorization type. OAuth2, Plain, APIKey, and X509Cert are well-defined",
                              "clientrequired": true,
                              "serverrequired": true
                            },
                            "*": {
                              "name": "*",
                              "type": "any"
                            }
                          }
                        }
                      },
                      "consumergroup": {
                        "name": "consumergroup",
                        "type": "string",
                        "description": "The Apache Kafka consumer group name to use for consumers"
                      },
                      "deployed": {
                        "name": "deployed",
                        "type": "boolean",
                        "description": "If `true`, the endpoint metadata represents a public, live endpoint that is available for communication and a strict validator MAY test the liveness of the endpoint"
                      },
                      "endpoints": {
                        "name": "endpoints",
                        "type": "array",
                        "description": "The network addresses that are for communication with the endpoint. The endpoints are ordered by preference, with the first endpoint being the preferred endpoint. Some protocol implementations might not support multiple endpoints, in which case all but the first endpoint might be ignored. Whether the URI just identifies a network host or links directly to a resource managed by the network host is protocol specific",
                        "item": {
                          "type": "object",
                          "attributes": {
                            "uri": {
                              "name": "uri",
                              "type": "uri",
                              "description": "Network accessible location",
                              "clientrequired": true,
                              "serverrequired": true
                            },
                            "*": {
                              "name": "*",
                              "type": "any"
                            }
                          }
                        }
                      },
                      "headers": {
                        "name": "headers",
                        "type": "map",
                        "description": "The Apache Kafka headers for publishers on this endpoint",
                        "item": {
                          "type": "string"
                        }
                      },
                      "key": {
                        "name": "key",
                        "type": "string",
                        "description": "The Apache Kafka record key"
                      },
                      "partition": {
                        "name": "partition",
                        "type": "integer",
                        "description": "The Apache Kafka partition number to use when writing to or receiving from Apache Kafka"
                      },
                      "topic": {
                        "name": "topic",
                        "type": "string",
                        "description": "Apache Kafka topic name",
                        "clientrequired": true,
                        "serverrequired": true
                      },
                      "*": {
                        "name": "*",
                        "type": "any"
                      }
                    }
                  }
                }
              },
              "MQTT/3.1.1": {
                "siblingAttributes": {
                  "protocoloptions": {
                    "name": "protocoloptions",
                    "type": "object",
                    "description": "Configuration information for this endpoint",
                    "attributes": {
                      "authorization": {
                        "name": "authorization",
                        "type": "array",
                        "description": "Authorization options. These are hints for the adapter for interacting with the authorization endpoint. This is not a credentials configuration",
                        "item": {
                          "type": "object",
                          "attributes": {
                            "authorityuri": {
                              "name": "authorityuri",
                              "type": "uri",
                              "description": "The authority uri where authorization shall be requested (if applicable)"
                            },
                            "granttypes": {
                              "name": "granttypes",
                              "type": "array",
                              "description": "The grant types that can be requested (if applicable)",
                              "item": {
                                "type": "string"
                              }
                            },
                            "resourceurl": {
                              "name": "resourceurl",
                              "type": "url",
                              "description": "The resource uri for which authorization shall be granted (if applicable)"
                            },
                            "type": {
                              "name": "type",
                              "type": "string",
                              "description": "The authentication/authorization type. OAuth2, Plain, APIKey, and X509Cert are well-defined",
                              "clientrequired": true,
                              "serverrequired": true
                            },
                            "*": {
                              "name": "*",
                              "type": "any"
                            }
                          }
                        }
                      },
                      "cleansession": {
                        "name": "cleansession",
                        "type": "boolean",
                        "description": "The MQTT clean session flag to use for publishers on this endpoint"
                      },
                      "deployed": {
                        "name": "deployed",
                        "type": "boolean",
                        "description": "If `true`, the endpoint metadata represents a public, live endpoint that is available for communication and a strict validator MAY test the liveness of the endpoint"
                      },
                      "endpoints": {
                        "name": "endpoints",
                        "type": "array",
                        "description": "The network addresses that are for communication with the endpoint. The endpoints are ordered by preference, with the first endpoint being the preferred endpoint. Some protocol implementations might not support multiple endpoints, in which case all but the first endpoint might be ignored. Whether the URI just identifies a network host or links directly to a resource managed by the network host is protocol specific",
                        "item": {
                          "type": "object",
                          "attributes": {
                            "uri": {
                              "name": "uri",
                              "type": "uri",
                              "description": "Network accessible location",
                              "clientrequired": true,
                              "serverrequired": true
                            },
                            "*": {
                              "name": "*",
                              "type": "any"
                            }
                          }
                        }
                      },
                      "qos": {
                        "name": "qos",
                        "type": "uinteger",
                        "description": "The MQTT QoS level. May be 0, 1, or 2"
                      },
                      "retain": {
                        "name": "retain",
                        "type": "boolean",
                        "description": "The MQTT retain flag to use for publishers on ths endpoint"
                      },
                      "topic": {
                        "name": "topic",
                        "type": "string",
                        "description": "MQTT topic path"
                      },
                      "willmessage": {
                        "name": "willmessage",
                        "type": "string",
                        "description": "The MQTT will message definition to configure for publishers on this endpoint"
                      },
                      "willtopic": {
                        "name": "willtopic",
                        "type": "string",
                        "description": "The MQTT will topic to configure for publishers on this endpoint"
                      },
                      "*": {
                        "name": "*",
                        "type": "any"
                      }
                    }
                  }
                }
              },
              "MQTT/5.0": {
                "siblingAttributes": {
                  "protocoloptions": {
                    "name": "protocoloptions",
                    "type": "object",
                    "description": "Configuration information for this endpoint",
                    "attributes": {
                      "authorization": {
                        "name": "authorization",
                        "type": "array",
                        "description": "Authorization options. These are hints for the adapter for interacting with the authorization endpoint. This is not a credentials configuration",
                        "item": {
                          "type": "object",
                          "attributes": {
                            "authorityuri": {
                              "name": "authorityuri",
                              "type": "uri",
                              "description": "The authority uri where authorization shall be requested (if applicable)"
                            },
                            "granttypes": {
                              "name": "granttypes",
                              "type": "array",
                              "description": "The grant types that can be requested (if applicable)",
                              "item": {
                                "type": "string"
                              }
                            },
                            "resourceurl": {
                              "name": "resourceurl",
                              "type": "url",
                              "description": "The resource uri for which authorization shall be granted (if applicable)"
                            },
                            "type": {
                              "name": "type",
                              "type": "string",
                              "description": "The authentication/authorization type. OAuth2, Plain, APIKey, and X509Cert are well-defined",
                              "clientrequired": true,
                              "serverrequired": true
                            },
                            "*": {
                              "name": "*",
                              "type": "any"
                            }
                          }
                        }
                      },
                      "cleansession": {
                        "name": "cleansession",
                        "type": "boolean",
                        "description": "The MQTT clean session flag to use for publishers on this endpoint"
                      },
                      "deployed": {
                        "name": "deployed",
                        "type": "boolean",
                        "description": "If `true`, the endpoint metadata represents a public, live endpoint that is available for communication and a strict validator MAY test the liveness of the endpoint"
                      },
                      "endpoints": {
                        "name": "endpoints",
                        "type": "array",
                        "description": "The network addresses that are for communication with the endpoint. The endpoints are ordered by preference, with the first endpoint being the preferred endpoint. Some protocol implementations might not support multiple endpoints, in which case all but the first endpoint might be ignored. Whether the URI just identifies a network host or links directly to a resource managed by the network host is protocol specific",
                        "item": {
                          "type": "object",
                          "attributes": {
                            "uri": {
                              "name": "uri",
                              "type": "uri",
                              "description": "Network accessible location",
                              "clientrequired": true,
                              "serverrequired": true
                            },
                            "*": {
                              "name": "*",
                              "type": "any"
                            }
                          }
                        }
                      },
                      "qos": {
                        "name": "qos",
                        "type": "uinteger",
                        "description": "The MQTT QoS level. May be 0, 1, or 2"
                      },
                      "retain": {
                        "name": "retain",
                        "type": "boolean",
                        "description": "The MQTT retain flag to use for publishers on ths endpoint"
                      },
                      "topic": {
                        "name": "topic",
                        "type": "string",
                        "description": "The MQTT topic path"
                      },
                      "willmessage": {
                        "name": "willmessage",
                        "type": "string",
                        "description": "The MQTT will message definition to configure for publishers on this endpoint"
                      },
                      "willtopic": {
                        "name": "willtopic",
                        "type": "string",
                        "description": "The MQTT will topic to configure for publishers on this endpoint"
                      },
                      "*": {
                        "name": "*",
                        "type": "any"
                      }
                    }
                  }
                }
              },
              "NATS": {
                "siblingAttributes": {
                  "protocoloptions": {
                    "name": "protocoloptions",
                    "type": "object",
                    "description": "Configuration information for this endpoint",
                    "attributes": {
                      "authorization": {
                        "name": "authorization",
                        "type": "array",
                        "description": "Authorization options. These are hints for the adapter for interacting with the authorization endpoint. This is not a credentials configuration",
                        "item": {
                          "type": "object",
                          "attributes": {
                            "authorityuri": {
                              "name": "authorityuri",
                              "type": "uri",
                              "description": "The authority uri where authorization shall be requested (if applicable)"
                            },
                            "granttypes": {
                              "name": "granttypes",
                              "type": "array",
                              "description": "The grant types that can be requested (if applicable)",
                              "item": {
                                "type": "string"
                              }
                            },
                            "resourceurl": {
                              "name": "resourceurl",
                              "type": "url",
                              "description": "The resource uri for which authorization shall be granted (if applicable)"
                            },
                            "type": {
                              "name": "type",
                              "type": "string",
                              "description": "The authentication/authorization type. OAuth2, Plain, APIKey, and X509Cert are well-defined",
                              "clientrequired": true,
                              "serverrequired": true
                            },
                            "*": {
                              "name": "*",
                              "type": "any"
                            }
                          }
                        }
                      },
                      "deployed": {
                        "name": "deployed",
                        "type": "boolean",
                        "description": "If `true`, the endpoint metadata represents a public, live endpoint that is available for communication and a strict validator MAY test the liveness of the endpoint"
                      },
                      "endpoints": {
                        "name": "endpoints",
                        "type": "array",
                        "description": "The network addresses that are for communication with the endpoint. The endpoints are ordered by preference, with the first endpoint being the preferred endpoint. Some protocol implementations might not support multiple endpoints, in which case all but the first endpoint might be ignored. Whether the URI just identifies a network host or links directly to a resource managed by the network host is protocol specific",
                        "item": {
                          "type": "object",
                          "attributes": {
                            "uri": {
                              "name": "uri",
                              "type": "uri",
                              "description": "Network accessible location",
                              "clientrequired": true,
                              "serverrequired": true
                            },
                            "*": {
                              "name": "*",
                              "type": "any"
                            }
                          }
                        }
                      },
                      "subject": {
                        "name": "subject",
                        "type": "string",
                        "description": "The NATS subject",
                        "clientrequired": true,
                        "serverrequired": true
                      },
                      "*": {
                        "name": "*",
                        "type": "any"
                      }
                    }
                  }
                }
              }
            }
          },
          "usage": {
            "name": "usage",
            "type": "string",
            "description": "Client's expected usage of this endpoint",
            "enum": [
              "subscriber",
              "consumer",
              "producer"
            ],
            "strict": true,
            "clientrequired": true,
            "serverrequired": true
          },
          "*": {
            "name": "*",
            "type": "any"
          }
        },
        "resources": {
          "messages": {
            "plural": "messages",
            "singular": "message",
            "maxversions": 1,
            "setversionid": true,
            "setdefaultversionsticky": false,
            "hasdocument": false,
            "attributes": {
              "messageid": {
                "name": "messageid",
                "type": "string",
                "immutable": true,
                "serverrequired": true
              },
              "versionid": {
                "name": "versionid",
                "type": "string",
                "immutable": true,
                "serverrequired": true
              },
              "self": {
                "name": "self",
                "type": "url",
                "readonly": true,
                "serverrequired": true
              },
              "xid": {
                "name": "xid",
                "type": "xid",
                "readonly": true,
                "serverrequired": true
              },
              "epoch": {
                "name": "epoch",
                "type": "uinteger",
                "serverrequired": true
              },
              "name": {
                "name": "name",
                "type": "string"
              },
              "isdefault": {
                "name": "isdefault",
                "type": "boolean",
                "readonly": true,
                "serverrequired": true,
                "default": false
              },
              "description": {
                "name": "description",
                "type": "string"
              },
              "documentation": {
                "name": "documentation",
                "type": "url"
              },
              "labels": {
                "name": "labels",
                "type": "map",
                "item": {
                  "type": "string"
                }
              },
              "createdat": {
                "name": "createdat",
                "type": "timestamp",
                "serverrequired": true
              },
              "modifiedat": {
                "name": "modifiedat",
                "type": "timestamp",
                "serverrequired": true
              },
              "contenttype": {
                "name": "contenttype",
                "type": "string"
              },
              "basemessageurl": {
                "name": "basemessageurl",
                "type": "uri",
                "description": "Reference to a base definition for this definition, either via a (relative) URL or a fragment identifier. The base definition is overridden by this definition. If not present, this definition does not override any base definition"
              },
              "datacontenttype": {
                "name": "datacontenttype",
                "type": "string",
                "description": "The content type for the message payload"
              },
              "dataschema": {
                "name": "dataschema",
                "type": "any",
                "description": "The inline schema for the message payload, equivalent to the 'schema' attribute of the schema registry"
              },
              "dataschemaformat": {
                "name": "dataschemaformat",
                "type": "string",
                "description": "The schema format applicable to the message payload, equivalent to the 'format' attribute of the schema registry"
              },
              "dataschemauri": {
                "name": "dataschemauri",
                "type": "uri",
                "description": "The URI of the schema for the message payload, equivalent to the 'schemaurl' attribute of the schema registry"
              },
              "envelope": {
                "name": "envelope",
                "type": "string",
                "description": "Message envelope format identifier. This attribute MUST be the same as the 'envelope' attribute of the definition group, but is not automatically inherited because definitions may be cross-referenced across groups",
                "ifValues": {
                  "CloudEvents/1.0": {
                    "siblingAttributes": {
                      "envelopemetadata": {
                        "name": "envelopemetadata",
                        "type": "object",
                        "description": "CloudEvents metadata constraints",
                        "attributes": {
                          "dataschema": {
                            "name": "dataschema",
                            "type": "object",
                            "description": "The uri of the schema that the event payload adheres to. If the dataschema attribute is not present, it MUST be interpreted as no schema. An application MAY assign a meaning to the dataschema attribute if it is not present by default",
                            "attributes": {
                              "description": {
                                "name": "description",
                                "type": "string"
                              },
                              "required": {
                                "name": "required",
                                "type": "boolean",
                                "description": "The uri required"
                              },
                              "type": {
                                "name": "type",
                                "type": "string"
                              },
                              "value": {
                                "name": "value",
                                "type": "uritemplate",
                                "description": "The uri value template"
                              }
                            }
                          },
                          "id": {
                            "name": "id",
                            "type": "object",
                            "description": "CloudEvents id",
                            "attributes": {
                              "description": {
                                "name": "description",
                                "type": "string"
                              },
                              "required": {
                                "name": "required",
                                "type": "boolean",
                                "enum": [
                                  true
                                ],
                                "serverrequired": true,
                                "default": true
                              },
                              "type": {
                                "name": "type",
                                "type": "string"
                              },
                              "value": {
                                "name": "value",
                                "type": "string",
                                "description": "CloudEvents id value template"
                              }
                            }
                          },
                          "source": {
                            "name": "source",
                            "type": "object",
                            "description": "CloudEvents source",
                            "attributes": {
                              "description": {
                                "name": "description",
                                "type": "string"
                              },
                              "required": {
                                "name": "required",
                                "type": "boolean",
                                "enum": [
                                  true
                                ],
                                "serverrequired": true,
                                "default": true
                              },
                              "type": {
                                "name": "type",
                                "type": "string"
                              },
                              "value": {
                                "name": "value",
                                "type": "string",
                                "description": "CloudEvents source value template"
                              }
                            }
                          },
                          "specversion": {
                            "name": "specversion",
                            "type": "object",
                            "description": "CloudEvents spec version",
                            "attributes": {
                              "description": {
                                "name": "description",
                                "type": "string"
                              },
                              "required": {
                                "name": "required",
                                "type": "boolean",
                                "enum": [
                                  true
                                ],
                                "serverrequired": true,
                                "default": true
                              },
                              "type": {
                                "name": "type",
                                "type": "string"
                              },
                              "value": {
                                "name": "value",
                                "type": "string",
                                "description": "CloudEvents spec version"
                              }
                            }
                          },
                          "subject": {
                            "name": "subject",
                            "type": "object",
                            "description": "CloudEvents subject",
                            "attributes": {
                              "description": {
                                "name": "description",
                                "type": "string"
                              },
                              "required": {
                                "name": "required",
                                "type": "boolean",
                                "description": "CloudEvents subject required"
                              },
                              "type": {
                                "name": "type",
                                "type": "string"
                              },
                              "value": {
                                "name": "value",
                                "type": "string",
                                "description": "CloudEvents subject value template"
                              }
                            }
                          },
                          "time": {
                            "name": "time",
                            "type": "object",
                            "description": "The timestamp of when the event happened",
                            "attributes": {
                              "description": {
                                "name": "description",
                                "type": "string"
                              },
                              "required": {
                                "name": "required",
                                "type": "boolean",
                                "description": "The timestamp required"
                              },
                              "type": {
                                "name": "type",
                                "type": "string"
                              },
                              "value": {
                                "name": "value",
                                "type": "string",
                                "description": "The timestamp value template"
                              }
                            }
                          },
                          "type": {
                            "name": "type",
                            "type": "object",
                            "description": "CloudEvents type",
                            "attributes": {
                              "description": {
                                "name": "description",
                                "type": "string"
                              },
                              "required": {
                                "name": "required",
                                "type": "boolean",
                                "enum": [
                                  true
                                ],
                                "serverrequired": true,
                                "default": true
                              },
                              "type": {
                                "name": "type",
                                "type": "string"
                              },
                              "value": {
                                "name": "value",
                                "type": "string",
                                "description": "CloudEvents type value template"
                              }
                            }
                          },
                          "*": {
                            "name": "*",
                            "type": "object",
                            "description": "CloudEvent extension property",
                            "attributes": {
                              "description": {
                                "name": "description",
                                "type": "string"
                              },
                              "required": {
                                "name": "required",
                                "type": "boolean",
                                "description": "Whether the extension is required"
                              },
                              "type": {
                                "name": "type",
                                "type": "string",
                                "description": "The value type"
                              },
                              "value": {
                                "name": "value",
                                "type": "string",
                                "description": "The value template"
                              }
                            }
                          }
                        }
                      },
                      "envelopeoptions": {
                        "name": "envelopeoptions",
                        "type": "object",
                        "description": "Envelope metadata constraints",
                        "attributes": {
                          "format": {
                            "name": "format",
                            "type": "string",
                            "description": "The media type format used to serialize the CloudEvent in the case of mode=structured"
                          },
                          "mode": {
                            "name": "mode",
                            "type": "string",
                            "description": "Whether CloudEvents 'binary' or 'structure' mode will be used",
                            "enum": [
                              "binary",
                              "structured"
                            ]
                          },
                          "*": {
                            "name": "*",
                            "type": "any"
                          }
                        }
                      }
                    }
                  },
                  "None": {}
                }
              },
              "protocol": {
                "name": "protocol",
                "type": "string",
                "description": "Protocol identifier. This attribute MUST be the same as the 'protocol' attribute of the definition group, but is not automatically inherited because definitions may be cross-referenced across groups",
                "ifValues": {
                  "AMQP/1.0": {
                    "siblingAttributes": {
                      "protocoloptions": {
                        "name": "protocoloptions",
                        "type": "object",
                        "description": "AMQP message metadata constraints",
                        "attributes": {
                          "application_properties": {
                            "name": "application_properties",
                            "type": "map",
                            "item": {
                              "type": "object",
                              "attributes": {
                                "description": {
                                  "name": "description",
                                  "type": "string"
                                },
                                "required": {
                                  "name": "required",
                                  "type": "boolean",
                                  "description": "The application property required"
                                },
                                "type": {
                                  "name": "type",
                                  "type": "string",
                                  "description": "The application property type"
                                },
                                "value": {
                                  "name": "value",
                                  "type": "string",
                                  "description": "The application property value template"
                                }
                              }
                            }
                          },
                          "delivery_annotations": {
                            "name": "delivery_annotations",
                            "type": "map",
                            "item": {
                              "type": "object",
                              "attributes": {
                                "description": {
                                  "name": "description",
                                  "type": "string"
                                },
                                "required": {
                                  "name": "required",
                                  "type": "boolean",
                                  "description": "Whether the annotation is required"
                                },
                                "type": {
                                  "name": "type",
                                  "type": "string",
                                  "description": "The annotation type"
                                },
                                "value": {
                                  "name": "value",
                                  "type": "string",
                                  "description": "The delivery annotation value"
                                }
                              }
                            }
                          },
                          "footer": {
                            "name": "footer",
                            "type": "map",
                            "item": {
                              "type": "object",
                              "attributes": {
                                "description": {
                                  "name": "description",
                                  "type": "string"
                                },
                                "required": {
                                  "name": "required",
                                  "type": "boolean",
                                  "description": "AMQP footer required"
                                },
                                "type": {
                                  "name": "type",
                                  "type": "string",
                                  "description": "AMQP footer type"
                                },
                                "value": {
                                  "name": "value",
                                  "type": "string",
                                  "description": "AMQP footer value"
                                }
                              }
                            }
                          },
                          "header": {
                            "name": "header",
                            "type": "map",
                            "item": {
                              "type": "object",
                              "attributes": {
                                "description": {
                                  "name": "description",
                                  "type": "string"
                                },
                                "required": {
                                  "name": "required",
                                  "type": "boolean",
                                  "description": "AMQP header required"
                                },
                                "type": {
                                  "name": "type",
                                  "type": "string",
                                  "description": "AMQP header type"
                                },
                                "value": {
                                  "name": "value",
                                  "type": "string",
                                  "description": "AMQP header value"
                                }
                              }
                            }
                          },
                          "message_annotations": {
                            "name": "message_annotations",
                            "type": "map",
                            "item": {
                              "type": "object",
                              "attributes": {
                                "description": {
                                  "name": "description",
                                  "type": "string"
                                },
                                "required": {
                                  "name": "required",
                                  "type": "boolean",
                                  "description": "Whether the message annotation is required"
                                },
                                "type": {
                                  "name": "type",
                                  "type": "string",
                                  "description": "The message annotation type"
                                },
                                "value": {
                                  "name": "value",
                                  "type": "string",
                                  "description": "The message annotation value"
                                }
                              }
                            }
                          },
                          "properties": {
                            "name": "properties",
                            "type": "object",
                            "attributes": {
                              "absolute_expiry_time": {
                                "name": "absolute_expiry_time",
                                "type": "object",
                                "description": "AMQP absolute-expiry-time",
                                "attributes": {
                                  "description": {
                                    "name": "description",
                                    "type": "string"
                                  },
                                  "required": {
                                    "name": "required",
                                    "type": "boolean",
                                    "description": "AMQP absolute-expiry-time required"
                                  },
                                  "type": {
                                    "name": "type",
                                    "type": "string",
                                    "description": "AMQP absolute-expiry-time value type"
                                  },
                                  "value": {
                                    "name": "value",
                                    "type": "string",
                                    "description": "AMQP absolute-expiry-time value template"
                                  }
                                }
                              },
                              "content_encoding": {
                                "name": "content_encoding",
                                "type": "object",
                                "description": "AMQP content-encoding",
                                "attributes": {
                                  "description": {
                                    "name": "description",
                                    "type": "string"
                                  },
                                  "required": {
                                    "name": "required",
                                    "type": "boolean",
                                    "description": "AMQP content-encoding required"
                                  },
                                  "type": {
                                    "name": "type",
                                    "type": "string",
                                    "description": "AMQP content-encoding value type"
                                  },
                                  "value": {
                                    "name": "value",
                                    "type": "string",
                                    "description": "AMQP content-encoding value template"
                                  }
                                }
                              },
                              "content_type": {
                                "name": "content_type",
                                "type": "object",
                                "description": "AMQP content-type",
                                "attributes": {
                                  "description": {
                                    "name": "description",
                                    "type": "string"
                                  },
                                  "required": {
                                    "name": "required",
                                    "type": "boolean",
                                    "description": "AMQP content-type required"
                                  },
                                  "type": {
                                    "name": "type",
                                    "type": "string",
                                    "description": "AMQP content-type value type"
                                  },
                                  "value": {
                                    "name": "value",
                                    "type": "string",
                                    "description": "AMQP content-type value template"
                                  }
                                }
                              },
                              "correlation_id": {
                                "name": "correlation_id",
                                "type": "object",
                                "description": "AMQP correlation-id",
                                "attributes": {
                                  "description": {
                                    "name": "description",
                                    "type": "string"
                                  },
                                  "required": {
                                    "name": "required",
                                    "type": "boolean",
                                    "description": "AMQP correlation-id required"
                                  },
                                  "type": {
                                    "name": "type",
                                    "type": "string",
                                    "description": "AMQP correlation-id value type"
                                  },
                                  "value": {
                                    "name": "value",
                                    "type": "string",
                                    "description": "AMQP correlation-id value template"
                                  }
                                }
                              },
                              "group_id": {
                                "name": "group_id",
                                "type": "object",
                                "description": "AMQP group-id",
                                "attributes": {
                                  "description": {
                                    "name": "description",
                                    "type": "string"
                                  },
                                  "required": {
                                    "name": "required",
                                    "type": "boolean",
                                    "description": "AMQP group-id required"
                                  },
                                  "type": {
                                    "name": "type",
                                    "type": "string",
                                    "description": "AMQP group-id value type"
                                  },
                                  "value": {
                                    "name": "value",
                                    "type": "string",
                                    "description": "AMQP group-id value template"
                                  }
                                }
                              },
                              "group_sequence": {
                                "name": "group_sequence",
                                "type": "object",
                                "description": "AMQP group-sequence",
                                "attributes": {
                                  "description": {
                                    "name": "description",
                                    "type": "string"
                                  },
                                  "required": {
                                    "name": "required",
                                    "type": "boolean",
                                    "description": "AMQP group-sequence required"
                                  },
                                  "type": {
                                    "name": "type",
                                    "type": "string",
                                    "description": "AMQP group-sequence value type"
                                  },
                                  "value": {
                                    "name": "value",
                                    "type": "string",
                                    "description": "AMQP group-sequence value template"
                                  }
                                }
                              },
                              "message_id": {
                                "name": "message_id",
                                "type": "object",
                                "description": "AMQP message-id",
                                "attributes": {
                                  "description": {
                                    "name": "description",
                                    "type": "string"
                                  },
                                  "required": {
                                    "name": "required",
                                    "type": "boolean",
                                    "description": "AMQP message-id required"
                                  },
                                  "type": {
                                    "name": "type",
                                    "type": "string",
                                    "description": "AMQP message-id value type"
                                  },
                                  "value": {
                                    "name": "value",
                                    "type": "string",
                                    "description": "AMQP message-id value template"
                                  }
                                }
                              },
                              "reply_to": {
                                "name": "reply_to",
                                "type": "object",
                                "description": "AMQP reply-to",
                                "attributes": {
                                  "description": {
                                    "name": "description",
                                    "type": "string"
                                  },
                                  "required": {
                                    "name": "required",
                                    "type": "boolean",
                                    "description": "AMQP reply-to required"
                                  },
                                  "type": {
                                    "name": "type",
                                    "type": "string",
                                    "description": "AMQP reply-to value type"
                                  },
                                  "value": {
                                    "name": "value",
                                    "type": "string",
                                    "description": "AMQP reply-to value template"
                                  }
                                }
                              },
                              "reply_to_group_id": {
                                "name": "reply_to_group_id",
                                "type": "object",
                                "description": "AMQP reply-to-group-id",
                                "attributes": {
                                  "description": {
                                    "name": "description",
                                    "type": "string"
                                  },
                                  "required": {
                                    "name": "required",
                                    "type": "boolean",
                                    "description": "AMQP reply-to-group-id required"
                                  },
                                  "type": {
                                    "name": "type",
                                    "type": "string",
                                    "description": "AMQP reply-to-group-id value type"
                                  },
                                  "value": {
                                    "name": "value",
                                    "type": "string",
                                    "description": "AMQP reply-to-group-id value template"
                                  }
                                }
                              },
                              "subject": {
                                "name": "subject",
                                "type": "object",
                                "description": "AMQP subject",
                                "attributes": {
                                  "description": {
                                    "name": "description",
                                    "type": "string"
                                  },
                                  "required": {
                                    "name": "required",
                                    "type": "boolean",
                                    "description": "AMQP subject required"
                                  },
                                  "type": {
                                    "name": "type",
                                    "type": "string",
                                    "description": "AMQP subject value type"
                                  },
                                  "value": {
                                    "name": "value",
                                    "type": "string",
                                    "description": "AMQP subject value template"
                                  }
                                }
                              },
                              "to": {
                                "name": "to",
                                "type": "object",
                                "description": "AMQP to",
                                "attributes": {
                                  "description": {
                                    "name": "description",
                                    "type": "string"
                                  },
                                  "required": {
                                    "name": "required",
                                    "type": "boolean",
                                    "description": "AMQP to required"
                                  },
                                  "type": {
                                    "name": "type",
                                    "type": "string",
                                    "description": "AMQP to value type"
                                  },
                                  "value": {
                                    "name": "value",
                                    "type": "string",
                                    "description": "AMQP to value template"
                                  }
                                }
                              },
                              "user_id": {
                                "name": "user_id",
                                "type": "object",
                                "description": "AMQP user-id",
                                "attributes": {
                                  "description": {
                                    "name": "description",
                                    "type": "string"
                                  },
                                  "required": {
                                    "name": "required",
                                    "type": "boolean",
                                    "description": "AMQP user-id required"
                                  },
                                  "type": {
                                    "name": "type",
                                    "type": "string",
                                    "description": "AMQP user-id value type"
                                  },
                                  "value": {
                                    "name": "value",
                                    "type": "string",
                                    "description": "AMQP user-id value template"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "HTTP": {
                    "siblingAttributes": {
                      "protocoloptions": {
                        "name": "protocoloptions",
                        "type": "object",
                        "description": "The HTTP message metadata constraints",
                        "attributes": {
                          "headers": {
                            "name": "headers",
                            "type": "array",
                            "description": "The HTTP headers",
                            "item": {
                              "type": "object",
                              "attributes": {
                                "description": {
                                  "name": "description",
                                  "type": "string"
                                },
                                "name": {
                                  "name": "name",
                                  "type": "string",
                                  "description": "The HTTP header name"
                                },
                                "required": {
                                  "name": "required",
                                  "type": "boolean",
                                  "description": "The HTTP header required"
                                },
                                "value": {
                                  "name": "value",
                                  "type": "string",
                                  "description": "The HTTP header value"
                                }
                              }
                            }
                          },
                          "method": {
                            "name": "method",
                            "type": "string",
                            "description": "The HTTP method"
                          },
                          "path": {
                            "name": "path",
                            "type": "string",
                            "description": "The HTTP path as a uri template"
                          },
                          "query": {
                            "name": "query",
                            "type": "array",
                            "description": "The HTTP query parameters",
                            "item": {
                              "type": "object",
                              "attributes": {
                                "description": {
                                  "name": "description",
                                  "type": "string"
                                },
                                "name": {
                                  "name": "name",
                                  "type": "string",
                                  "description": "The HTTP query parameter"
                                },
                                "required": {
                                  "name": "required",
                                  "type": "boolean",
                                  "description": "The HTTP query parameter required"
                                },
                                "value": {
                                  "name": "value",
                                  "type": "string",
                                  "description": "The HTTP query parameter value"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "KAFKA": {
                    "siblingAttributes": {
                      "protocoloptions": {
                        "name": "protocoloptions",
                        "type": "object",
                        "description": "The Apache Kafka message metadata constraints",
                        "attributes": {
                          "headers": {
                            "name": "headers",
                            "type": "map",
                            "description": "The Apache Kafka headers",
                            "item": {
                              "type": "object",
                              "attributes": {
                                "description": {
                                  "name": "description",
                                  "type": "string"
                                },
                                "name": {
                                  "name": "name",
                                  "type": "string",
                                  "description": "The Apache Kafka header name"
                                },
                                "required": {
                                  "name": "required",
                                  "type": "boolean",
                                  "description": "The Apache Kafka header required"
                                },
                                "value": {
                                  "name": "value",
                                  "type": "string",
                                  "description": "The Apache Kafka header value"
                                }
                              }
                            }
                          },
                          "key": {
                            "name": "key",
                            "type": "string",
                            "description": "The Apache Kafka key"
                          },
                          "partition": {
                            "name": "partition",
                            "type": "integer",
                            "description": "The Apache Kafka partition"
                          },
                          "timestamp": {
                            "name": "timestamp",
                            "type": "integer",
                            "description": "The Apache Kafka timestamp"
                          },
                          "topic": {
                            "name": "topic",
                            "type": "string",
                            "description": "The Apache Kafka topic"
                          }
                        }
                      }
                    }
                  },
                  "MQTT/3.1.1": {
                    "siblingAttributes": {
                      "protocoloptions": {
                        "name": "protocoloptions",
                        "type": "object",
                        "description": "MQTT message metadata constraints",
                        "attributes": {
                          "qos": {
                            "name": "qos",
                            "type": "object",
                            "description": "MQTT qos",
                            "attributes": {
                              "description": {
                                "name": "description",
                                "type": "string"
                              },
                              "required": {
                                "name": "required",
                                "type": "boolean",
                                "description": "MQTT qos value required"
                              },
                              "value": {
                                "name": "value",
                                "type": "string",
                                "description": "MQTT qos value template"
                              }
                            }
                          },
                          "retain": {
                            "name": "retain",
                            "type": "object",
                            "description": "MQTT retain",
                            "attributes": {
                              "description": {
                                "name": "description",
                                "type": "string"
                              },
                              "required": {
                                "name": "required",
                                "type": "boolean",
                                "description": "MQTT retain value required"
                              },
                              "value": {
                                "name": "value",
                                "type": "boolean",
                                "description": "MQTT retain value template"
                              }
                            }
                          },
                          "topic_name": {
                            "name": "topic_name",
                            "type": "object",
                            "description": "MQTT topic-name",
                            "attributes": {
                              "description": {
                                "name": "description",
                                "type": "string"
                              },
                              "required": {
                                "name": "required",
                                "type": "boolean",
                                "description": "MQTT topic-name value required"
                              },
                              "value": {
                                "name": "value",
                                "type": "string",
                                "description": "MQTT topic-name value template"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "MQTT/5.0": {
                    "siblingAttributes": {
                      "protocoloptions": {
                        "name": "protocoloptions",
                        "type": "object",
                        "description": "MQTT message metadata constraints",
                        "attributes": {
                          "content_type": {
                            "name": "content_type",
                            "type": "object",
                            "description": "MQTT content-type",
                            "attributes": {
                              "description": {
                                "name": "description",
                                "type": "string"
                              },
                              "required": {
                                "name": "required",
                                "type": "boolean",
                                "description": "MQTT content-type value required"
                              },
                              "value": {
                                "name": "value",
                                "type": "string",
                                "description": "MQTT content-type value template"
                              }
                            }
                          },
                          "correlation_data": {
                            "name": "correlation_data",
                            "type": "object",
                            "description": "MQTT correlation-data",
                            "attributes": {
                              "description": {
                                "name": "description",
                                "type": "string"
                              },
                              "required": {
                                "name": "required",
                                "type": "boolean",
                                "description": "MQTT correlation-data value required"
                              },
                              "value": {
                                "name": "value",
                                "type": "string",
                                "description": "MQTT correlation-data value template"
                              }
                            }
                          },
                          "message_expiry_interval": {
                            "name": "message_expiry_interval",
                            "type": "object",
                            "description": "MQTT message-expiry-interval",
                            "attributes": {
                              "description": {
                                "name": "description",
                                "type": "string"
                              },
                              "required": {
                                "name": "required",
                                "type": "boolean",
                                "description": "MQTT message-expiry-interval value required"
                              },
                              "value": {
                                "name": "value",
                                "type": "integer",
                                "description": "MQTT message-expiry-interval value template"
                              }
                            }
                          },
                          "qos": {
                            "name": "qos",
                            "type": "object",
                            "description": "MQTT qos",
                            "attributes": {
                              "description": {
                                "name": "description",
                                "type": "string"
                              },
                              "required": {
                                "name": "required",
                                "type": "boolean",
                                "description": "MQTT qos value required"
                              },
                              "value": {
                                "name": "value",
                                "type": "integer",
                                "description": "MQTT qos value template"
                              }
                            }
                          },
                          "response_topic": {
                            "name": "response_topic",
                            "type": "object",
                            "description": "MQTT response-topic",
                            "attributes": {
                              "description": {
                                "name": "description",
                                "type": "string"
                              },
                              "required": {
                                "name": "required",
                                "type": "boolean",
                                "description": "MQTT response-topic value required"
                              },
                              "value": {
                                "name": "value",
                                "type": "string",
                                "description": "MQTT response-topic value template"
                              }
                            }
                          },
                          "retain": {
                            "name": "retain",
                            "type": "object",
                            "description": "MQTT retain",
                            "attributes": {
                              "description": {
                                "name": "description",
                                "type": "string"
                              },
                              "required": {
                                "name": "required",
                                "type": "boolean",
                                "description": "MQTT retain value required"
                              },
                              "value": {
                                "name": "value",
                                "type": "boolean",
                                "description": "MQTT retain value template"
                              }
                            }
                          },
                          "topic_name": {
                            "name": "topic_name",
                            "type": "object",
                            "description": "MQTT topic-name",
                            "attributes": {
                              "description": {
                                "name": "description",
                                "type": "string"
                              },
                              "required": {
                                "name": "required",
                                "type": "boolean",
                                "description": "MQTT topic-name value required"
                              },
                              "value": {
                                "name": "value",
                                "type": "string",
                                "description": "MQTT topic-name value template"
                              }
                            }
                          },
                          "user_properties": {
                            "name": "user_properties",
                            "type": "array",
                            "description": "MQTT user-properties",
                            "item": {
                              "type": "object",
                              "attributes": {
                                "description": {
                                  "name": "description",
                                  "type": "string"
                                },
                                "name": {
                                  "name": "name",
                                  "type": "string",
                                  "description": "MQTT user-property name"
                                },
                                "value": {
                                  "name": "value",
                                  "type": "string",
                                  "description": "MQTT user-property value"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "None": {}
                }
              }
            },
            "metaattributes": {
              "messageid": {
                "name": "messageid",
                "type": "string",
                "immutable": true,
                "serverrequired": true
              },
              "self": {
                "name": "self",
                "type": "url",
                "readonly": true,
                "serverrequired": true
              },
              "xid": {
                "name": "xid",
                "type": "xid",
                "readonly": true,
                "serverrequired": true
              },
              "xref": {
                "name": "xref",
                "type": "url"
              },
              "epoch": {
                "name": "epoch",
                "type": "uinteger",
                "serverrequired": true
              },
              "createdat": {
                "name": "createdat",
                "type": "timestamp",
                "serverrequired": true
              },
              "modifiedat": {
                "name": "modifiedat",
                "type": "timestamp",
                "serverrequired": true
              },
              "readonly": {
                "name": "readonly",
                "type": "boolean",
                "serverrequired": true,
                "default": false
              },
              "compatibility": {
                "name": "compatibility",
                "type": "string",
                "enum": [
                  "none",
                  "backward",
                  "backward_transitive",
                  "forward",
                  "forward_transitive",
                  "full",
                  "full_transitive"
                ],
                "strict": false,
                "serverrequired": true,
                "default": "none"
              },
              "defaultversionid": {
                "name": "defaultversionid",
                "type": "string",
                "serverrequired": true
              },
              "defaultversionurl": {
                "name": "defaultversionurl",
                "type": "url",
                "readonly": true,
                "serverrequired": true
              },
              "defaultversionsticky": {
                "name": "defaultversionsticky",
                "type": "boolean",
                "readonly": true,
                "serverrequired": true,
                "default": false
              }
            }
          }
        }
      },
      "messagegroups": {
        "plural": "messagegroups",
        "singular": "messagegroup",
        "attributes": {
          "messagegroupid": {
            "name": "messagegroupid",
            "type": "string",
            "immutable": true,
            "serverrequired": true
          },
          "self": {
            "name": "self",
            "type": "url",
            "readonly": true,
            "serverrequired": true
          },
          "xid": {
            "name": "xid",
            "type": "xid",
            "readonly": true,
            "serverrequired": true
          },
          "epoch": {
            "name": "epoch",
            "type": "uinteger",
            "serverrequired": true
          },
          "name": {
            "name": "name",
            "type": "string"
          },
          "description": {
            "name": "description",
            "type": "string"
          },
          "documentation": {
            "name": "documentation",
            "type": "url"
          },
          "labels": {
            "name": "labels",
            "type": "map",
            "item": {
              "type": "string"
            }
          },
          "createdat": {
            "name": "createdat",
            "type": "timestamp",
            "serverrequired": true
          },
          "modifiedat": {
            "name": "modifiedat",
            "type": "timestamp",
            "serverrequired": true
          },
          "envelope": {
            "name": "envelope",
            "type": "string",
            "description": "Envelope format identifier that defines the common metadata information for the message. All definitions in this group share this envelope format. Mixed-envelope-format groups are not permitted"
          },
          "protocol": {
            "name": "protocol",
            "type": "string",
            "description": "Protocol identifier that defines the transport message protocol. All definitions in this group share this protocol type. Mixed-protocol groups are not permitted"
          },
          "*": {
            "name": "*",
            "type": "any"
          }
        },
        "resources": {
          "messages": {
            "plural": "messages",
            "singular": "message",
            "maxversions": 1,
            "setversionid": true,
            "setdefaultversionsticky": false,
            "hasdocument": false,
            "attributes": {
              "messageid": {
                "name": "messageid",
                "type": "string",
                "immutable": true,
                "serverrequired": true
              },
              "versionid": {
                "name": "versionid",
                "type": "string",
                "immutable": true,
                "serverrequired": true
              },
              "self": {
                "name": "self",
                "type": "url",
                "readonly": true,
                "serverrequired": true
              },
              "xid": {
                "name": "xid",
                "type": "xid",
                "readonly": true,
                "serverrequired": true
              },
              "epoch": {
                "name": "epoch",
                "type": "uinteger",
                "serverrequired": true
              },
              "name": {
                "name": "name",
                "type": "string"
              },
              "isdefault": {
                "name": "isdefault",
                "type": "boolean",
                "readonly": true,
                "serverrequired": true,
                "default": false
              },
              "description": {
                "name": "description",
                "type": "string"
              },
              "documentation": {
                "name": "documentation",
                "type": "url"
              },
              "labels": {
                "name": "labels",
                "type": "map",
                "item": {
                  "type": "string"
                }
              },
              "createdat": {
                "name": "createdat",
                "type": "timestamp",
                "serverrequired": true
              },
              "modifiedat": {
                "name": "modifiedat",
                "type": "timestamp",
                "serverrequired": true
              },
              "contenttype": {
                "name": "contenttype",
                "type": "string"
              },
              "basemessageurl": {
                "name": "basemessageurl",
                "type": "uri",
                "description": "Reference to a base definition for this definition, either via a (relative) URL or a fragment identifier. The base definition is overridden by this definition. If not present, this definition does not override any base definition"
              },
              "datacontenttype": {
                "name": "datacontenttype",
                "type": "string",
                "description": "The content type for the message payload"
              },
              "dataschema": {
                "name": "dataschema",
                "type": "any",
                "description": "The inline schema for the message payload, equivalent to the 'schema' attribute of the schema registry"
              },
              "dataschemaformat": {
                "name": "dataschemaformat",
                "type": "string",
                "description": "The schema format applicable to the message payload, equivalent to the 'format' attribute of the schema registry"
              },
              "dataschemauri": {
                "name": "dataschemauri",
                "type": "uri",
                "description": "The URI of the schema for the message payload, equivalent to the 'schemaurl' attribute of the schema registry"
              },
              "envelope": {
                "name": "envelope",
                "type": "string",
                "description": "Message envelope format identifier. This attribute MUST be the same as the 'envelope' attribute of the definition group, but is not automatically inherited because definitions may be cross-referenced across groups",
                "ifValues": {
                  "CloudEvents/1.0": {
                    "siblingAttributes": {
                      "envelopemetadata": {
                        "name": "envelopemetadata",
                        "type": "object",
                        "description": "CloudEvents metadata constraints",
                        "attributes": {
                          "dataschema": {
                            "name": "dataschema",
                            "type": "object",
                            "description": "The uri of the schema that the event payload adheres to. If the dataschema attribute is not present, it MUST be interpreted as no schema. An application MAY assign a meaning to the dataschema attribute if it is not present by default",
                            "attributes": {
                              "description": {
                                "name": "description",
                                "type": "string"
                              },
                              "required": {
                                "name": "required",
                                "type": "boolean",
                                "description": "The uri required"
                              },
                              "type": {
                                "name": "type",
                                "type": "string"
                              },
                              "value": {
                                "name": "value",
                                "type": "uritemplate",
                                "description": "The uri value template"
                              }
                            }
                          },
                          "id": {
                            "name": "id",
                            "type": "object",
                            "description": "CloudEvents id",
                            "attributes": {
                              "description": {
                                "name": "description",
                                "type": "string"
                              },
                              "required": {
                                "name": "required",
                                "type": "boolean",
                                "enum": [
                                  true
                                ],
                                "serverrequired": true,
                                "default": true
                              },
                              "type": {
                                "name": "type",
                                "type": "string"
                              },
                              "value": {
                                "name": "value",
                                "type": "string",
                                "description": "CloudEvents id value template"
                              }
                            }
                          },
                          "source": {
                            "name": "source",
                            "type": "object",
                            "description": "CloudEvents source",
                            "attributes": {
                              "description": {
                                "name": "description",
                                "type": "string"
                              },
                              "required": {
                                "name": "required",
                                "type": "boolean",
                                "enum": [
                                  true
                                ],
                                "serverrequired": true,
                                "default": true
                              },
                              "type": {
                                "name": "type",
                                "type": "string"
                              },
                              "value": {
                                "name": "value",
                                "type": "string",
                                "description": "CloudEvents source value template"
                              }
                            }
                          },
                          "specversion": {
                            "name": "specversion",
                            "type": "object",
                            "description": "CloudEvents spec version",
                            "attributes": {
                              "description": {
                                "name": "description",
                                "type": "string"
                              },
                              "required": {
                                "name": "required",
                                "type": "boolean",
                                "enum": [
                                  true
                                ],
                                "serverrequired": true,
                                "default": true
                              },
                              "type": {
                                "name": "type",
                                "type": "string"
                              },
                              "value": {
                                "name": "value",
                                "type": "string",
                                "description": "CloudEvents spec version"
                              }
                            }
                          },
                          "subject": {
                            "name": "subject",
                            "type": "object",
                            "description": "CloudEvents subject",
                            "attributes": {
                              "description": {
                                "name": "description",
                                "type": "string"
                              },
                              "required": {
                                "name": "required",
                                "type": "boolean",
                                "description": "CloudEvents subject required"
                              },
                              "type": {
                                "name": "type",
                                "type": "string"
                              },
                              "value": {
                                "name": "value",
                                "type": "string",
                                "description": "CloudEvents subject value template"
                              }
                            }
                          },
                          "time": {
                            "name": "time",
                            "type": "object",
                            "description": "The timestamp of when the event happened",
                            "attributes": {
                              "description": {
                                "name": "description",
                                "type": "string"
                              },
                              "required": {
                                "name": "required",
                                "type": "boolean",
                                "description": "The timestamp required"
                              },
                              "type": {
                                "name": "type",
                                "type": "string"
                              },
                              "value": {
                                "name": "value",
                                "type": "string",
                                "description": "The timestamp value template"
                              }
                            }
                          },
                          "type": {
                            "name": "type",
                            "type": "object",
                            "description": "CloudEvents type",
                            "attributes": {
                              "description": {
                                "name": "description",
                                "type": "string"
                              },
                              "required": {
                                "name": "required",
                                "type": "boolean",
                                "enum": [
                                  true
                                ],
                                "serverrequired": true,
                                "default": true
                              },
                              "type": {
                                "name": "type",
                                "type": "string"
                              },
                              "value": {
                                "name": "value",
                                "type": "string",
                                "description": "CloudEvents type value template"
                              }
                            }
                          },
                          "*": {
                            "name": "*",
                            "type": "object",
                            "description": "CloudEvent extension property",
                            "attributes": {
                              "description": {
                                "name": "description",
                                "type": "string"
                              },
                              "required": {
                                "name": "required",
                                "type": "boolean",
                                "description": "Whether the extension is required"
                              },
                              "type": {
                                "name": "type",
                                "type": "string",
                                "description": "The value type"
                              },
                              "value": {
                                "name": "value",
                                "type": "string",
                                "description": "The value template"
                              }
                            }
                          }
                        }
                      },
                      "envelopeoptions": {
                        "name": "envelopeoptions",
                        "type": "object",
                        "description": "Envelope metadata constraints",
                        "attributes": {
                          "format": {
                            "name": "format",
                            "type": "string",
                            "description": "The media type format used to serialize the CloudEvent in the case of mode=structured"
                          },
                          "mode": {
                            "name": "mode",
                            "type": "string",
                            "description": "Whether CloudEvents 'binary' or 'structure' mode will be used",
                            "enum": [
                              "binary",
                              "structured"
                            ]
                          },
                          "*": {
                            "name": "*",
                            "type": "any"
                          }
                        }
                      }
                    }
                  },
                  "None": {}
                }
              },
              "protocol": {
                "name": "protocol",
                "type": "string",
                "description": "Protocol identifier. This attribute MUST be the same as the 'protocol' attribute of the definition group, but is not automatically inherited because definitions may be cross-referenced across groups",
                "ifValues": {
                  "AMQP/1.0": {
                    "siblingAttributes": {
                      "protocoloptions": {
                        "name": "protocoloptions",
                        "type": "object",
                        "description": "AMQP message metadata constraints",
                        "attributes": {
                          "application_properties": {
                            "name": "application_properties",
                            "type": "map",
                            "item": {
                              "type": "object",
                              "attributes": {
                                "description": {
                                  "name": "description",
                                  "type": "string"
                                },
                                "required": {
                                  "name": "required",
                                  "type": "boolean",
                                  "description": "The application property required"
                                },
                                "type": {
                                  "name": "type",
                                  "type": "string",
                                  "description": "The application property type"
                                },
                                "value": {
                                  "name": "value",
                                  "type": "string",
                                  "description": "The application property value template"
                                }
                              }
                            }
                          },
                          "delivery_annotations": {
                            "name": "delivery_annotations",
                            "type": "map",
                            "item": {
                              "type": "object",
                              "attributes": {
                                "description": {
                                  "name": "description",
                                  "type": "string"
                                },
                                "required": {
                                  "name": "required",
                                  "type": "boolean",
                                  "description": "Whether the annotation is required"
                                },
                                "type": {
                                  "name": "type",
                                  "type": "string",
                                  "description": "The annotation type"
                                },
                                "value": {
                                  "name": "value",
                                  "type": "string",
                                  "description": "The delivery annotation value"
                                }
                              }
                            }
                          },
                          "footer": {
                            "name": "footer",
                            "type": "map",
                            "item": {
                              "type": "object",
                              "attributes": {
                                "description": {
                                  "name": "description",
                                  "type": "string"
                                },
                                "required": {
                                  "name": "required",
                                  "type": "boolean",
                                  "description": "AMQP footer required"
                                },
                                "type": {
                                  "name": "type",
                                  "type": "string",
                                  "description": "AMQP footer type"
                                },
                                "value": {
                                  "name": "value",
                                  "type": "string",
                                  "description": "AMQP footer value"
                                }
                              }
                            }
                          },
                          "header": {
                            "name": "header",
                            "type": "map",
                            "item": {
                              "type": "object",
                              "attributes": {
                                "description": {
                                  "name": "description",
                                  "type": "string"
                                },
                                "required": {
                                  "name": "required",
                                  "type": "boolean",
                                  "description": "AMQP header required"
                                },
                                "type": {
                                  "name": "type",
                                  "type": "string",
                                  "description": "AMQP header type"
                                },
                                "value": {
                                  "name": "value",
                                  "type": "string",
                                  "description": "AMQP header value"
                                }
                              }
                            }
                          },
                          "message_annotations": {
                            "name": "message_annotations",
                            "type": "map",
                            "item": {
                              "type": "object",
                              "attributes": {
                                "description": {
                                  "name": "description",
                                  "type": "string"
                                },
                                "required": {
                                  "name": "required",
                                  "type": "boolean",
                                  "description": "Whether the message annotation is required"
                                },
                                "type": {
                                  "name": "type",
                                  "type": "string",
                                  "description": "The message annotation type"
                                },
                                "value": {
                                  "name": "value",
                                  "type": "string",
                                  "description": "The message annotation value"
                                }
                              }
                            }
                          },
                          "properties": {
                            "name": "properties",
                            "type": "object",
                            "attributes": {
                              "absolute_expiry_time": {
                                "name": "absolute_expiry_time",
                                "type": "object",
                                "description": "AMQP absolute-expiry-time",
                                "attributes": {
                                  "description": {
                                    "name": "description",
                                    "type": "string"
                                  },
                                  "required": {
                                    "name": "required",
                                    "type": "boolean",
                                    "description": "AMQP absolute-expiry-time required"
                                  },
                                  "type": {
                                    "name": "type",
                                    "type": "string",
                                    "description": "AMQP absolute-expiry-time value type"
                                  },
                                  "value": {
                                    "name": "value",
                                    "type": "string",
                                    "description": "AMQP absolute-expiry-time value template"
                                  }
                                }
                              },
                              "content_encoding": {
                                "name": "content_encoding",
                                "type": "object",
                                "description": "AMQP content-encoding",
                                "attributes": {
                                  "description": {
                                    "name": "description",
                                    "type": "string"
                                  },
                                  "required": {
                                    "name": "required",
                                    "type": "boolean",
                                    "description": "AMQP content-encoding required"
                                  },
                                  "type": {
                                    "name": "type",
                                    "type": "string",
                                    "description": "AMQP content-encoding value type"
                                  },
                                  "value": {
                                    "name": "value",
                                    "type": "string",
                                    "description": "AMQP content-encoding value template"
                                  }
                                }
                              },
                              "content_type": {
                                "name": "content_type",
                                "type": "object",
                                "description": "AMQP content-type",
                                "attributes": {
                                  "description": {
                                    "name": "description",
                                    "type": "string"
                                  },
                                  "required": {
                                    "name": "required",
                                    "type": "boolean",
                                    "description": "AMQP content-type required"
                                  },
                                  "type": {
                                    "name": "type",
                                    "type": "string",
                                    "description": "AMQP content-type value type"
                                  },
                                  "value": {
                                    "name": "value",
                                    "type": "string",
                                    "description": "AMQP content-type value template"
                                  }
                                }
                              },
                              "correlation_id": {
                                "name": "correlation_id",
                                "type": "object",
                                "description": "AMQP correlation-id",
                                "attributes": {
                                  "description": {
                                    "name": "description",
                                    "type": "string"
                                  },
                                  "required": {
                                    "name": "required",
                                    "type": "boolean",
                                    "description": "AMQP correlation-id required"
                                  },
                                  "type": {
                                    "name": "type",
                                    "type": "string",
                                    "description": "AMQP correlation-id value type"
                                  },
                                  "value": {
                                    "name": "value",
                                    "type": "string",
                                    "description": "AMQP correlation-id value template"
                                  }
                                }
                              },
                              "group_id": {
                                "name": "group_id",
                                "type": "object",
                                "description": "AMQP group-id",
                                "attributes": {
                                  "description": {
                                    "name": "description",
                                    "type": "string"
                                  },
                                  "required": {
                                    "name": "required",
                                    "type": "boolean",
                                    "description": "AMQP group-id required"
                                  },
                                  "type": {
                                    "name": "type",
                                    "type": "string",
                                    "description": "AMQP group-id value type"
                                  },
                                  "value": {
                                    "name": "value",
                                    "type": "string",
                                    "description": "AMQP group-id value template"
                                  }
                                }
                              },
                              "group_sequence": {
                                "name": "group_sequence",
                                "type": "object",
                                "description": "AMQP group-sequence",
                                "attributes": {
                                  "description": {
                                    "name": "description",
                                    "type": "string"
                                  },
                                  "required": {
                                    "name": "required",
                                    "type": "boolean",
                                    "description": "AMQP group-sequence required"
                                  },
                                  "type": {
                                    "name": "type",
                                    "type": "string",
                                    "description": "AMQP group-sequence value type"
                                  },
                                  "value": {
                                    "name": "value",
                                    "type": "string",
                                    "description": "AMQP group-sequence value template"
                                  }
                                }
                              },
                              "message_id": {
                                "name": "message_id",
                                "type": "object",
                                "description": "AMQP message-id",
                                "attributes": {
                                  "description": {
                                    "name": "description",
                                    "type": "string"
                                  },
                                  "required": {
                                    "name": "required",
                                    "type": "boolean",
                                    "description": "AMQP message-id required"
                                  },
                                  "type": {
                                    "name": "type",
                                    "type": "string",
                                    "description": "AMQP message-id value type"
                                  },
                                  "value": {
                                    "name": "value",
                                    "type": "string",
                                    "description": "AMQP message-id value template"
                                  }
                                }
                              },
                              "reply_to": {
                                "name": "reply_to",
                                "type": "object",
                                "description": "AMQP reply-to",
                                "attributes": {
                                  "description": {
                                    "name": "description",
                                    "type": "string"
                                  },
                                  "required": {
                                    "name": "required",
                                    "type": "boolean",
                                    "description": "AMQP reply-to required"
                                  },
                                  "type": {
                                    "name": "type",
                                    "type": "string",
                                    "description": "AMQP reply-to value type"
                                  },
                                  "value": {
                                    "name": "value",
                                    "type": "string",
                                    "description": "AMQP reply-to value template"
                                  }
                                }
                              },
                              "reply_to_group_id": {
                                "name": "reply_to_group_id",
                                "type": "object",
                                "description": "AMQP reply-to-group-id",
                                "attributes": {
                                  "description": {
                                    "name": "description",
                                    "type": "string"
                                  },
                                  "required": {
                                    "name": "required",
                                    "type": "boolean",
                                    "description": "AMQP reply-to-group-id required"
                                  },
                                  "type": {
                                    "name": "type",
                                    "type": "string",
                                    "description": "AMQP reply-to-group-id value type"
                                  },
                                  "value": {
                                    "name": "value",
                                    "type": "string",
                                    "description": "AMQP reply-to-group-id value template"
                                  }
                                }
                              },
                              "subject": {
                                "name": "subject",
                                "type": "object",
                                "description": "AMQP subject",
                                "attributes": {
                                  "description": {
                                    "name": "description",
                                    "type": "string"
                                  },
                                  "required": {
                                    "name": "required",
                                    "type": "boolean",
                                    "description": "AMQP subject required"
                                  },
                                  "type": {
                                    "name": "type",
                                    "type": "string",
                                    "description": "AMQP subject value type"
                                  },
                                  "value": {
                                    "name": "value",
                                    "type": "string",
                                    "description": "AMQP subject value template"
                                  }
                                }
                              },
                              "to": {
                                "name": "to",
                                "type": "object",
                                "description": "AMQP to",
                                "attributes": {
                                  "description": {
                                    "name": "description",
                                    "type": "string"
                                  },
                                  "required": {
                                    "name": "required",
                                    "type": "boolean",
                                    "description": "AMQP to required"
                                  },
                                  "type": {
                                    "name": "type",
                                    "type": "string",
                                    "description": "AMQP to value type"
                                  },
                                  "value": {
                                    "name": "value",
                                    "type": "string",
                                    "description": "AMQP to value template"
                                  }
                                }
                              },
                              "user_id": {
                                "name": "user_id",
                                "type": "object",
                                "description": "AMQP user-id",
                                "attributes": {
                                  "description": {
                                    "name": "description",
                                    "type": "string"
                                  },
                                  "required": {
                                    "name": "required",
                                    "type": "boolean",
                                    "description": "AMQP user-id required"
                                  },
                                  "type": {
                                    "name": "type",
                                    "type": "string",
                                    "description": "AMQP user-id value type"
                                  },
                                  "value": {
                                    "name": "value",
                                    "type": "string",
                                    "description": "AMQP user-id value template"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "HTTP": {
                    "siblingAttributes": {
                      "protocoloptions": {
                        "name": "protocoloptions",
                        "type": "object",
                        "description": "The HTTP message metadata constraints",
                        "attributes": {
                          "headers": {
                            "name": "headers",
                            "type": "array",
                            "description": "The HTTP headers",
                            "item": {
                              "type": "object",
                              "attributes": {
                                "description": {
                                  "name": "description",
                                  "type": "string"
                                },
                                "name": {
                                  "name": "name",
                                  "type": "string",
                                  "description": "The HTTP header name"
                                },
                                "required": {
                                  "name": "required",
                                  "type": "boolean",
                                  "description": "The HTTP header required"
                                },
                                "value": {
                                  "name": "value",
                                  "type": "string",
                                  "description": "The HTTP header value"
                                }
                              }
                            }
                          },
                          "method": {
                            "name": "method",
                            "type": "string",
                            "description": "The HTTP method"
                          },
                          "path": {
                            "name": "path",
                            "type": "string",
                            "description": "The HTTP path as a uri template"
                          },
                          "query": {
                            "name": "query",
                            "type": "array",
                            "description": "The HTTP query parameters",
                            "item": {
                              "type": "object",
                              "attributes": {
                                "description": {
                                  "name": "description",
                                  "type": "string"
                                },
                                "name": {
                                  "name": "name",
                                  "type": "string",
                                  "description": "The HTTP query parameter"
                                },
                                "required": {
                                  "name": "required",
                                  "type": "boolean",
                                  "description": "The HTTP query parameter required"
                                },
                                "value": {
                                  "name": "value",
                                  "type": "string",
                                  "description": "The HTTP query parameter value"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "KAFKA": {
                    "siblingAttributes": {
                      "protocoloptions": {
                        "name": "protocoloptions",
                        "type": "object",
                        "description": "The Apache Kafka message metadata constraints",
                        "attributes": {
                          "headers": {
                            "name": "headers",
                            "type": "map",
                            "description": "The Apache Kafka headers",
                            "item": {
                              "type": "object",
                              "attributes": {
                                "description": {
                                  "name": "description",
                                  "type": "string"
                                },
                                "name": {
                                  "name": "name",
                                  "type": "string",
                                  "description": "The Apache Kafka header name"
                                },
                                "required": {
                                  "name": "required",
                                  "type": "boolean",
                                  "description": "The Apache Kafka header required"
                                },
                                "value": {
                                  "name": "value",
                                  "type": "string",
                                  "description": "The Apache Kafka header value"
                                }
                              }
                            }
                          },
                          "key": {
                            "name": "key",
                            "type": "string",
                            "description": "The Apache Kafka key"
                          },
                          "partition": {
                            "name": "partition",
                            "type": "integer",
                            "description": "The Apache Kafka partition"
                          },
                          "timestamp": {
                            "name": "timestamp",
                            "type": "integer",
                            "description": "The Apache Kafka timestamp"
                          },
                          "topic": {
                            "name": "topic",
                            "type": "string",
                            "description": "The Apache Kafka topic"
                          }
                        }
                      }
                    }
                  },
                  "MQTT/3.1.1": {
                    "siblingAttributes": {
                      "protocoloptions": {
                        "name": "protocoloptions",
                        "type": "object",
                        "description": "MQTT message metadata constraints",
                        "attributes": {
                          "qos": {
                            "name": "qos",
                            "type": "object",
                            "description": "MQTT qos",
                            "attributes": {
                              "description": {
                                "name": "description",
                                "type": "string"
                              },
                              "required": {
                                "name": "required",
                                "type": "boolean",
                                "description": "MQTT qos value required"
                              },
                              "value": {
                                "name": "value",
                                "type": "string",
                                "description": "MQTT qos value template"
                              }
                            }
                          },
                          "retain": {
                            "name": "retain",
                            "type": "object",
                            "description": "MQTT retain",
                            "attributes": {
                              "description": {
                                "name": "description",
                                "type": "string"
                              },
                              "required": {
                                "name": "required",
                                "type": "boolean",
                                "description": "MQTT retain value required"
                              },
                              "value": {
                                "name": "value",
                                "type": "boolean",
                                "description": "MQTT retain value template"
                              }
                            }
                          },
                          "topic_name": {
                            "name": "topic_name",
                            "type": "object",
                            "description": "MQTT topic-name",
                            "attributes": {
                              "description": {
                                "name": "description",
                                "type": "string"
                              },
                              "required": {
                                "name": "required",
                                "type": "boolean",
                                "description": "MQTT topic-name value required"
                              },
                              "value": {
                                "name": "value",
                                "type": "string",
                                "description": "MQTT topic-name value template"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "MQTT/5.0": {
                    "siblingAttributes": {
                      "protocoloptions": {
                        "name": "protocoloptions",
                        "type": "object",
                        "description": "MQTT message metadata constraints",
                        "attributes": {
                          "content_type": {
                            "name": "content_type",
                            "type": "object",
                            "description": "MQTT content-type",
                            "attributes": {
                              "description": {
                                "name": "description",
                                "type": "string"
                              },
                              "required": {
                                "name": "required",
                                "type": "boolean",
                                "description": "MQTT content-type value required"
                              },
                              "value": {
                                "name": "value",
                                "type": "string",
                                "description": "MQTT content-type value template"
                              }
                            }
                          },
                          "correlation_data": {
                            "name": "correlation_data",
                            "type": "object",
                            "description": "MQTT correlation-data",
                            "attributes": {
                              "description": {
                                "name": "description",
                                "type": "string"
                              },
                              "required": {
                                "name": "required",
                                "type": "boolean",
                                "description": "MQTT correlation-data value required"
                              },
                              "value": {
                                "name": "value",
                                "type": "string",
                                "description": "MQTT correlation-data value template"
                              }
                            }
                          },
                          "message_expiry_interval": {
                            "name": "message_expiry_interval",
                            "type": "object",
                            "description": "MQTT message-expiry-interval",
                            "attributes": {
                              "description": {
                                "name": "description",
                                "type": "string"
                              },
                              "required": {
                                "name": "required",
                                "type": "boolean",
                                "description": "MQTT message-expiry-interval value required"
                              },
                              "value": {
                                "name": "value",
                                "type": "integer",
                                "description": "MQTT message-expiry-interval value template"
                              }
                            }
                          },
                          "qos": {
                            "name": "qos",
                            "type": "object",
                            "description": "MQTT qos",
                            "attributes": {
                              "description": {
                                "name": "description",
                                "type": "string"
                              },
                              "required": {
                                "name": "required",
                                "type": "boolean",
                                "description": "MQTT qos value required"
                              },
                              "value": {
                                "name": "value",
                                "type": "integer",
                                "description": "MQTT qos value template"
                              }
                            }
                          },
                          "response_topic": {
                            "name": "response_topic",
                            "type": "object",
                            "description": "MQTT response-topic",
                            "attributes": {
                              "description": {
                                "name": "description",
                                "type": "string"
                              },
                              "required": {
                                "name": "required",
                                "type": "boolean",
                                "description": "MQTT response-topic value required"
                              },
                              "value": {
                                "name": "value",
                                "type": "string",
                                "description": "MQTT response-topic value template"
                              }
                            }
                          },
                          "retain": {
                            "name": "retain",
                            "type": "object",
                            "description": "MQTT retain",
                            "attributes": {
                              "description": {
                                "name": "description",
                                "type": "string"
                              },
                              "required": {
                                "name": "required",
                                "type": "boolean",
                                "description": "MQTT retain value required"
                              },
                              "value": {
                                "name": "value",
                                "type": "boolean",
                                "description": "MQTT retain value template"
                              }
                            }
                          },
                          "topic_name": {
                            "name": "topic_name",
                            "type": "object",
                            "description": "MQTT topic-name",
                            "attributes": {
                              "description": {
                                "name": "description",
                                "type": "string"
                              },
                              "required": {
                                "name": "required",
                                "type": "boolean",
                                "description": "MQTT topic-name value required"
                              },
                              "value": {
                                "name": "value",
                                "type": "string",
                                "description": "MQTT topic-name value template"
                              }
                            }
                          },
                          "user_properties": {
                            "name": "user_properties",
                            "type": "array",
                            "description": "MQTT user-properties",
                            "item": {
                              "type": "object",
                              "attributes": {
                                "description": {
                                  "name": "description",
                                  "type": "string"
                                },
                                "name": {
                                  "name": "name",
                                  "type": "string",
                                  "description": "MQTT user-property name"
                                },
                                "value": {
                                  "name": "value",
                                  "type": "string",
                                  "description": "MQTT user-property value"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "None": {}
                }
              }
            },
            "metaattributes": {
              "messageid": {
                "name": "messageid",
                "type": "string",
                "immutable": true,
                "serverrequired": true
              },
              "self": {
                "name": "self",
                "type": "url",
                "readonly": true,
                "serverrequired": true
              },
              "xid": {
                "name": "xid",
                "type": "xid",
                "readonly": true,
                "serverrequired": true
              },
              "xref": {
                "name": "xref",
                "type": "url"
              },
              "epoch": {
                "name": "epoch",
                "type": "uinteger",
                "serverrequired": true
              },
              "createdat": {
                "name": "createdat",
                "type": "timestamp",
                "serverrequired": true
              },
              "modifiedat": {
                "name": "modifiedat",
                "type": "timestamp",
                "serverrequired": true
              },
              "readonly": {
                "name": "readonly",
                "type": "boolean",
                "serverrequired": true,
                "default": false
              },
              "compatibility": {
                "name": "compatibility",
                "type": "string",
                "enum": [
                  "none",
                  "backward",
                  "backward_transitive",
                  "forward",
                  "forward_transitive",
                  "full",
                  "full_transitive"
                ],
                "strict": false,
                "serverrequired": true,
                "default": "none"
              },
              "defaultversionid": {
                "name": "defaultversionid",
                "type": "string",
                "serverrequired": true
              },
              "defaultversionurl": {
                "name": "defaultversionurl",
                "type": "url",
                "readonly": true,
                "serverrequired": true
              },
              "defaultversionsticky": {
                "name": "defaultversionsticky",
                "type": "boolean",
                "readonly": true,
                "serverrequired": true,
                "default": false
              }
            }
          }
        }
      },
      "schemagroups": {
        "plural": "schemagroups",
        "singular": "schemagroup",
        "attributes": {
          "schemagroupid": {
            "name": "schemagroupid",
            "type": "string",
            "immutable": true,
            "serverrequired": true
          },
          "self": {
            "name": "self",
            "type": "url",
            "readonly": true,
            "serverrequired": true
          },
          "xid": {
            "name": "xid",
            "type": "xid",
            "readonly": true,
            "serverrequired": true
          },
          "epoch": {
            "name": "epoch",
            "type": "uinteger",
            "serverrequired": true
          },
          "name": {
            "name": "name",
            "type": "string"
          },
          "description": {
            "name": "description",
            "type": "string"
          },
          "documentation": {
            "name": "documentation",
            "type": "url"
          },
          "labels": {
            "name": "labels",
            "type": "map",
            "item": {
              "type": "string"
            }
          },
          "createdat": {
            "name": "createdat",
            "type": "timestamp",
            "serverrequired": true
          },
          "modifiedat": {
            "name": "modifiedat",
            "type": "timestamp",
            "serverrequired": true
          },
          "*": {
            "name": "*",
            "type": "any"
          }
        },
        "resources": {
          "schemas": {
            "plural": "schemas",
            "singular": "schema",
            "maxversions": 0,
            "setversionid": true,
            "setdefaultversionsticky": true,
            "hasdocument": true,
            "attributes": {
              "schemaid": {
                "name": "schemaid",
                "type": "string",
                "immutable": true,
                "serverrequired": true
              },
              "versionid": {
                "name": "versionid",
                "type": "string",
                "immutable": true,
                "serverrequired": true
              },
              "self": {
                "name": "self",
                "type": "url",
                "readonly": true,
                "serverrequired": true
              },
              "xid": {
                "name": "xid",
                "type": "xid",
                "readonly": true,
                "serverrequired": true
              },
              "epoch": {
                "name": "epoch",
                "type": "uinteger",
                "serverrequired": true
              },
              "name": {
                "name": "name",
                "type": "string"
              },
              "isdefault": {
                "name": "isdefault",
                "type": "boolean",
                "readonly": true,
                "serverrequired": true,
                "default": false
              },
              "description": {
                "name": "description",
                "type": "string"
              },
              "documentation": {
                "name": "documentation",
                "type": "url"
              },
              "labels": {
                "name": "labels",
                "type": "map",
                "item": {
                  "type": "string"
                }
              },
              "createdat": {
                "name": "createdat",
                "type": "timestamp",
                "serverrequired": true
              },
              "modifiedat": {
                "name": "modifiedat",
                "type": "timestamp",
                "serverrequired": true
              },
              "contenttype": {
                "name": "contenttype",
                "type": "string"
              },
              "format": {
                "name": "format",
                "type": "string",
                "description": "Schema format identifier for this schema version"
              },
              "*": {
                "name": "*",
                "type": "any"
              }
            },
            "metaattributes": {
              "schemaid": {
                "name": "schemaid",
                "type": "string",
                "immutable": true,
                "serverrequired": true
              },
              "self": {
                "name": "self",
                "type": "url",
                "readonly": true,
                "serverrequired": true
              },
              "xid": {
                "name": "xid",
                "type": "xid",
                "readonly": true,
                "serverrequired": true
              },
              "xref": {
                "name": "xref",
                "type": "url"
              },
              "epoch": {
                "name": "epoch",
                "type": "uinteger",
                "serverrequired": true
              },
              "createdat": {
                "name": "createdat",
                "type": "timestamp",
                "serverrequired": true
              },
              "modifiedat": {
                "name": "modifiedat",
                "type": "timestamp",
                "serverrequired": true
              },
              "readonly": {
                "name": "readonly",
                "type": "boolean",
                "serverrequired": true,
                "default": false
              },
              "compatibility": {
                "name": "compatibility",
                "type": "string",
                "enum": [
                  "none",
                  "backward",
                  "backward_transitive",
                  "forward",
                  "forward_transitive",
                  "full",
                  "full_transitive"
                ],
                "strict": false,
                "serverrequired": true,
                "default": "none"
              },
              "defaultversionid": {
                "name": "defaultversionid",
                "type": "string",
                "serverrequired": true
              },
              "defaultversionurl": {
                "name": "defaultversionurl",
                "type": "url",
                "readonly": true,
                "serverrequired": true
              },
              "defaultversionsticky": {
                "name": "defaultversionsticky",
                "type": "boolean",
                "readonly": true,
                "serverrequired": true,
                "default": false
              },
              "validation": {
                "name": "validation",
                "type": "boolean",
                "description": "Verify compliance with specified schema 'format'"
              }
            }
          }
        }
      }
    }
  },
  "endpointsurl": "#/endpoints",
  "endpoints": {
    "Contoso.ERP.Eventing.Http": {
      "endpointid": "Contoso.ERP.Eventing.Http",
      "self": "#/endpoints/Contoso.ERP.Eventing.Http",
      "xid": "/endpoints/Contoso.ERP.Eventing.Http",
      "epoch": 1,
      "createdat": "2025-02-26T13:09:22.902623885Z",
      "modifiedat": "2025-02-26T13:09:22.902623885Z",
      "deployed": false,
      "endpoints": [
        {
          "uri": "https://erpsystem.com/events"
        }
      ],
      "envelope": "CloudEvents/1.0",
      "messagegroups": [
        "#/messagegroups/Contoso.ERP.ReservationEvents",
        "#/messagegroups/Contoso.ERP.PaymentEvents",
        "#/messagegroups/Contoso.ERP.ShippingEvents",
        "#/messagegroups/Contoso.ERP.InventoryEvents",
        "#/messagegroups/Contoso.ERP.ProductEvents",
        "#/messagegroups/Contoso.ERP.EmployeeEvents",
        "#/messagegroups/Contoso.ERP.PurchasingEvents"
      ],
      "protocol": "HTTP",
      "usage": "producer",
      "messagesurl": "#/endpoints/Contoso.ERP.Eventing.Http/messages",
      "messages": {},
      "messagescount": 0
    },
    "Contoso.ERP.Eventing.HttpSubscriber": {
      "endpointid": "Contoso.ERP.Eventing.HttpSubscriber",
      "self": "#/endpoints/Contoso.ERP.Eventing.HttpSubscriber",
      "xid": "/endpoints/Contoso.ERP.Eventing.HttpSubscriber",
      "epoch": 1,
      "createdat": "2025-02-26T13:09:22.902623885Z",
      "modifiedat": "2025-02-26T13:09:22.902623885Z",
      "deployed": false,
      "endpoints": [
        {
          "uri": "https://erpsystem.com/events/subscriptions"
        }
      ],
      "envelope": "CloudEvents/1.0",
      "messagegroups": [
        "#/messagegroups/Contoso.ERP.ReservationEvents",
        "#/messagegroups/Contoso.ERP.PaymentEvents",
        "#/messagegroups/Contoso.ERP.ShippingEvents",
        "#/messagegroups/Contoso.ERP.InventoryEvents",
        "#/messagegroups/Contoso.ERP.ProductEvents",
        "#/messagegroups/Contoso.ERP.EmployeeEvents",
        "#/messagegroups/Contoso.ERP.PurchasingEvents"
      ],
      "protocol": "HTTP",
      "usage": "subscriber",
      "messagesurl": "#/endpoints/Contoso.ERP.Eventing.HttpSubscriber/messages",
      "messages": {},
      "messagescount": 0
    },
    "Contoso.ERP.Eventing.KafkaConsumer": {
      "endpointid": "Contoso.ERP.Eventing.KafkaConsumer",
      "self": "#/endpoints/Contoso.ERP.Eventing.KafkaConsumer",
      "xid": "/endpoints/Contoso.ERP.Eventing.KafkaConsumer",
      "epoch": 1,
      "createdat": "2025-02-26T13:09:22.902623885Z",
      "modifiedat": "2025-02-26T13:09:22.902623885Z",
      "channel": "mytopic",
      "deployed": false,
      "endpoints": [
        {
          "uri": "kafka://cediscoveryinterop.example.com:9093"
        }
      ],
      "envelope": "CloudEvents/1.0",
      "messagegroups": [
        "#/messagegroups/Contoso.ERP.ReservationEvents",
        "#/messagegroups/Contoso.ERP.PaymentEvents",
        "#/messagegroups/Contoso.ERP.ShippingEvents",
        "#/messagegroups/Contoso.ERP.InventoryEvents",
        "#/messagegroups/Contoso.ERP.ProductEvents",
        "#/messagegroups/Contoso.ERP.EmployeeEvents",
        "#/messagegroups/Contoso.ERP.PurchasingEvents"
      ],
      "protocol": "KAFKA",
      "protocoloptions": {
        "consumergroup": "mygroup",
        "topic": "mytopic"
      },
      "usage": "consumer",
      "messagesurl": "#/endpoints/Contoso.ERP.Eventing.KafkaConsumer/messages",
      "messages": {},
      "messagescount": 0
    },
    "Contoso.ERP.Eventing.KafkaProducer": {
      "endpointid": "Contoso.ERP.Eventing.KafkaProducer",
      "self": "#/endpoints/Contoso.ERP.Eventing.KafkaProducer",
      "xid": "/endpoints/Contoso.ERP.Eventing.KafkaProducer",
      "epoch": 1,
      "createdat": "2025-02-26T13:09:22.902623885Z",
      "modifiedat": "2025-02-26T13:09:22.902623885Z",
      "channel": "mytopic",
      "deployed": false,
      "endpoints": [
        {
          "uri": "kafka://cediscoveryinterop.example.com:9093"
        }
      ],
      "envelope": "CloudEvents/1.0",
      "messagegroups": [
        "#/messagegroups/Contoso.ERP.ReservationEvents",
        "#/messagegroups/Contoso.ERP.PaymentEvents",
        "#/messagegroups/Contoso.ERP.ShippingEvents",
        "#/messagegroups/Contoso.ERP.InventoryEvents",
        "#/messagegroups/Contoso.ERP.ProductEvents",
        "#/messagegroups/Contoso.ERP.EmployeeEvents",
        "#/messagegroups/Contoso.ERP.PurchasingEvents"
      ],
      "protocol": "KAFKA",
      "protocoloptions": {
        "partition": 0,
        "topic": "mytopic"
      },
      "usage": "producer",
      "messagesurl": "#/endpoints/Contoso.ERP.Eventing.KafkaProducer/messages",
      "messages": {},
      "messagescount": 0
    },
    "Contoso.ERP.Eventing.QueueConsumer": {
      "endpointid": "Contoso.ERP.Eventing.QueueConsumer",
      "self": "#/endpoints/Contoso.ERP.Eventing.QueueConsumer",
      "xid": "/endpoints/Contoso.ERP.Eventing.QueueConsumer",
      "epoch": 1,
      "createdat": "2025-02-26T13:09:22.902623885Z",
      "modifiedat": "2025-02-26T13:09:22.902623885Z",
      "channel": "myqueue",
      "deployed": false,
      "endpoints": [
        {
          "uri": "amqps://cediscoveryinterop.example.com/queue"
        }
      ],
      "envelope": "CloudEvents/1.0",
      "messagegroups": [
        "#/messagegroups/Contoso.ERP.ReservationEvents",
        "#/messagegroups/Contoso.ERP.PaymentEvents",
        "#/messagegroups/Contoso.ERP.ShippingEvents",
        "#/messagegroups/Contoso.ERP.InventoryEvents",
        "#/messagegroups/Contoso.ERP.ProductEvents",
        "#/messagegroups/Contoso.ERP.EmployeeEvents",
        "#/messagegroups/Contoso.ERP.PurchasingEvents"
      ],
      "protocol": "AMQP/1.0",
      "protocoloptions": {
        "distribution_mode": "copy",
        "link_properties": {
          "myprop": "prop"
        },
        "node": "queue"
      },
      "usage": "consumer",
      "messagesurl": "#/endpoints/Contoso.ERP.Eventing.QueueConsumer/messages",
      "messages": {},
      "messagescount": 0
    },
    "Contoso.ERP.Eventing.QueueProducer": {
      "endpointid": "Contoso.ERP.Eventing.QueueProducer",
      "self": "#/endpoints/Contoso.ERP.Eventing.QueueProducer",
      "xid": "/endpoints/Contoso.ERP.Eventing.QueueProducer",
      "epoch": 1,
      "createdat": "2025-02-26T13:09:22.902623885Z",
      "modifiedat": "2025-02-26T13:09:22.902623885Z",
      "channel": "myqueue",
      "deployed": false,
      "endpoints": [
        {
          "uri": "amqps://cediscoveryinterop.example.com/queue"
        }
      ],
      "envelope": "CloudEvents/1.0",
      "messagegroups": [
        "#/messagegroups/Contoso.ERP.ReservationEvents",
        "#/messagegroups/Contoso.ERP.PaymentEvents",
        "#/messagegroups/Contoso.ERP.ShippingEvents",
        "#/messagegroups/Contoso.ERP.InventoryEvents",
        "#/messagegroups/Contoso.ERP.ProductEvents",
        "#/messagegroups/Contoso.ERP.EmployeeEvents",
        "#/messagegroups/Contoso.ERP.PurchasingEvents"
      ],
      "protocol": "AMQP/1.0",
      "protocoloptions": {
        "distribution_mode": "copy",
        "link_properties": {
          "myprop": "prop"
        },
        "node": "queue"
      },
      "usage": "producer",
      "messagesurl": "#/endpoints/Contoso.ERP.Eventing.QueueProducer/messages",
      "messages": {},
      "messagescount": 0
    },
    "e1": {
      "endpointid": "e1",
      "self": "#/endpoints/e1",
      "xid": "/endpoints/e1",
      "epoch": 1,
      "createdat": "2025-02-25T20:47:54.50473958Z",
      "modifiedat": "2025-02-25T20:47:54.50473958Z",
      "usage": "producer",
      "messagesurl": "#/endpoints/e1/messages",
      "messages": {
        "blobCreated": {
          "messageid": "blobCreated",
          "self": "#/endpoints/e1/messages/blobCreated",
          "xid": "/endpoints/e1/messages/blobCreated",
          "metaurl": "#/endpoints/e1/messages/blobCreated/meta",
          "meta": {
            "messageid": "blobCreated",
            "self": "#/endpoints/e1/messages/blobCreated/meta",
            "xid": "/endpoints/e1/messages/blobCreated/meta",
            "epoch": 1,
            "createdat": "2025-02-25T20:47:54.50473958Z",
            "modifiedat": "2025-02-25T20:47:54.50473958Z",
            "readonly": false,
            "compatibility": "none",
            "defaultversionid": "v1",
            "defaultversionurl": "#/endpoints/e1/messages/blobCreated/versions/v1",
            "defaultversionsticky": false
          },
          "versionsurl": "#/endpoints/e1/messages/blobCreated/versions",
          "versions": {
            "v1": {
              "messageid": "blobCreated",
              "versionid": "v1",
              "self": "#/endpoints/e1/messages/blobCreated/versions/v1",
              "xid": "/endpoints/e1/messages/blobCreated/versions/v1",
              "epoch": 1,
              "isdefault": true,
              "createdat": "2025-02-25T20:47:54.50473958Z",
              "modifiedat": "2025-02-25T20:47:54.50473958Z"
            }
          },
          "versionscount": 1
        },
        "blobDeleted": {
          "messageid": "blobDeleted",
          "self": "#/endpoints/e1/messages/blobDeleted",
          "xid": "/endpoints/e1/messages/blobDeleted",
          "metaurl": "#/endpoints/e1/messages/blobDeleted/meta",
          "meta": {
            "messageid": "blobDeleted",
            "self": "#/endpoints/e1/messages/blobDeleted/meta",
            "xid": "/endpoints/e1/messages/blobDeleted/meta",
            "epoch": 1,
            "createdat": "2025-02-25T20:47:54.50473958Z",
            "modifiedat": "2025-02-25T20:47:54.50473958Z",
            "readonly": false,
            "compatibility": "none",
            "defaultversionid": "v1.0",
            "defaultversionurl": "#/endpoints/e1/messages/blobDeleted/versions/v1.0",
            "defaultversionsticky": false
          },
          "versionsurl": "#/endpoints/e1/messages/blobDeleted/versions",
          "versions": {
            "v1.0": {
              "messageid": "blobDeleted",
              "versionid": "v1.0",
              "self": "#/endpoints/e1/messages/blobDeleted/versions/v1.0",
              "xid": "/endpoints/e1/messages/blobDeleted/versions/v1.0",
              "epoch": 1,
              "isdefault": true,
              "createdat": "2025-02-25T20:47:54.50473958Z",
              "modifiedat": "2025-02-25T20:47:54.50473958Z"
            }
          },
          "versionscount": 1
        }
      },
      "messagescount": 2
    },
    "e2": {
      "endpointid": "e2",
      "self": "#/endpoints/e2",
      "xid": "/endpoints/e2",
      "epoch": 1,
      "createdat": "2025-02-25T20:47:54.50473958Z",
      "modifiedat": "2025-02-25T20:47:54.50473958Z",
      "usage": "consumer",
      "messagesurl": "#/endpoints/e2/messages",
      "messages": {
        "popped": {
          "messageid": "popped",
          "self": "#/endpoints/e2/messages/popped",
          "xid": "/endpoints/e2/messages/popped",
          "metaurl": "#/endpoints/e2/messages/popped/meta",
          "meta": {
            "messageid": "popped",
            "self": "#/endpoints/e2/messages/popped/meta",
            "xid": "/endpoints/e2/messages/popped/meta",
            "epoch": 1,
            "createdat": "2025-02-25T20:47:54.50473958Z",
            "modifiedat": "2025-02-25T20:47:54.50473958Z",
            "readonly": false,
            "compatibility": "none",
            "defaultversionid": "v1.0",
            "defaultversionurl": "#/endpoints/e2/messages/popped/versions/v1.0",
            "defaultversionsticky": false
          },
          "versionsurl": "#/endpoints/e2/messages/popped/versions",
          "versions": {
            "v1.0": {
              "messageid": "popped",
              "versionid": "v1.0",
              "self": "#/endpoints/e2/messages/popped/versions/v1.0",
              "xid": "/endpoints/e2/messages/popped/versions/v1.0",
              "epoch": 1,
              "isdefault": true,
              "createdat": "2025-02-25T20:47:54.50473958Z",
              "modifiedat": "2025-02-25T20:47:54.50473958Z"
            }
          },
          "versionscount": 1
        }
      },
      "messagescount": 1
    }
  },
  "endpointscount": 8,
  "messagegroupsurl": "#/messagegroups",
  "messagegroups": {
    "Contoso.ERP.EmployeeEvents": {
      "messagegroupid": "Contoso.ERP.EmployeeEvents",
      "self": "#/messagegroups/Contoso.ERP.EmployeeEvents",
      "xid": "/messagegroups/Contoso.ERP.EmployeeEvents",
      "epoch": 1,
      "createdat": "2025-02-26T13:09:22.902623885Z",
      "modifiedat": "2025-02-26T13:09:22.902623885Z",
      "envelope": "CloudEvents/1.0",
      "messagesurl": "#/messagegroups/Contoso.ERP.EmployeeEvents/messages",
      "messages": {
        "Contoso.ERP.Events.EmployeeAdded": {
          "messageid": "Contoso.ERP.Events.EmployeeAdded",
          "self": "#/messagegroups/Contoso.ERP.EmployeeEvents/messages/Contoso.ERP.Events.EmployeeAdded",
          "xid": "/messagegroups/Contoso.ERP.EmployeeEvents/messages/Contoso.ERP.Events.EmployeeAdded",
          "metaurl": "#/messagegroups/Contoso.ERP.EmployeeEvents/messages/Contoso.ERP.Events.EmployeeAdded/meta",
          "meta": {
            "messageid": "Contoso.ERP.Events.EmployeeAdded",
            "self": "#/messagegroups/Contoso.ERP.EmployeeEvents/messages/Contoso.ERP.Events.EmployeeAdded/meta",
            "xid": "/messagegroups/Contoso.ERP.EmployeeEvents/messages/Contoso.ERP.Events.EmployeeAdded/meta",
            "epoch": 1,
            "createdat": "2025-02-26T13:09:22.902623885Z",
            "modifiedat": "2025-02-26T13:09:22.902623885Z",
            "readonly": false,
            "compatibility": "none",
            "defaultversionid": "1",
            "defaultversionurl": "#/messagegroups/Contoso.ERP.EmployeeEvents/messages/Contoso.ERP.Events.EmployeeAdded/versions/1",
            "defaultversionsticky": false
          },
          "versionsurl": "#/messagegroups/Contoso.ERP.EmployeeEvents/messages/Contoso.ERP.Events.EmployeeAdded/versions",
          "versions": {
            "1": {
              "messageid": "Contoso.ERP.Events.EmployeeAdded",
              "versionid": "1",
              "self": "#/messagegroups/Contoso.ERP.EmployeeEvents/messages/Contoso.ERP.Events.EmployeeAdded/versions/1",
              "xid": "/messagegroups/Contoso.ERP.EmployeeEvents/messages/Contoso.ERP.Events.EmployeeAdded/versions/1",
              "epoch": 1,
              "isdefault": true,
              "description": "An employee has been added",
              "createdat": "2025-02-26T13:09:22.902623885Z",
              "modifiedat": "2025-02-26T13:09:22.902623885Z",
              "dataschemaformat": "JSONSchema/draft-07",
              "dataschemauri": "#/schemagroups/Contoso.ERP.Events/schemas/employeeData",
              "envelope": "CloudEvents/1.0",
              "envelopemetadata": {
                "id": {
                  "required": true,
                  "type": "string"
                },
                "source": {
                  "required": true,
                  "type": "uritemplate",
                  "value": "/{tenantid}/erp/employees"
                },
                "time": {
                  "required": true,
                  "type": "datetime"
                },
                "type": {
                  "required": true,
                  "type": "string",
                  "value": "Contoso.ERP.Events.EmployeeAdded"
                }
              }
            }
          },
          "versionscount": 1
        },
        "Contoso.ERP.Events.EmployeeDeleted": {
          "messageid": "Contoso.ERP.Events.EmployeeDeleted",
          "self": "#/messagegroups/Contoso.ERP.EmployeeEvents/messages/Contoso.ERP.Events.EmployeeDeleted",
          "xid": "/messagegroups/Contoso.ERP.EmployeeEvents/messages/Contoso.ERP.Events.EmployeeDeleted",
          "metaurl": "#/messagegroups/Contoso.ERP.EmployeeEvents/messages/Contoso.ERP.Events.EmployeeDeleted/meta",
          "meta": {
            "messageid": "Contoso.ERP.Events.EmployeeDeleted",
            "self": "#/messagegroups/Contoso.ERP.EmployeeEvents/messages/Contoso.ERP.Events.EmployeeDeleted/meta",
            "xid": "/messagegroups/Contoso.ERP.EmployeeEvents/messages/Contoso.ERP.Events.EmployeeDeleted/meta",
            "epoch": 1,
            "createdat": "2025-02-26T13:09:22.902623885Z",
            "modifiedat": "2025-02-26T13:09:22.902623885Z",
            "readonly": false,
            "compatibility": "none",
            "defaultversionid": "1",
            "defaultversionurl": "#/messagegroups/Contoso.ERP.EmployeeEvents/messages/Contoso.ERP.Events.EmployeeDeleted/versions/1",
            "defaultversionsticky": false
          },
          "versionsurl": "#/messagegroups/Contoso.ERP.EmployeeEvents/messages/Contoso.ERP.Events.EmployeeDeleted/versions",
          "versions": {
            "1": {
              "messageid": "Contoso.ERP.Events.EmployeeDeleted",
              "versionid": "1",
              "self": "#/messagegroups/Contoso.ERP.EmployeeEvents/messages/Contoso.ERP.Events.EmployeeDeleted/versions/1",
              "xid": "/messagegroups/Contoso.ERP.EmployeeEvents/messages/Contoso.ERP.Events.EmployeeDeleted/versions/1",
              "epoch": 1,
              "isdefault": true,
              "description": "An employee has been deleted",
              "createdat": "2025-02-26T13:09:22.902623885Z",
              "modifiedat": "2025-02-26T13:09:22.902623885Z",
              "dataschemaformat": "JSONSchema/draft-07",
              "dataschemauri": "#/schemagroups/Contoso.ERP.Events/schemas/employeeDeletionData",
              "envelope": "CloudEvents/1.0",
              "envelopemetadata": {
                "id": {
                  "required": true,
                  "type": "string"
                },
                "source": {
                  "required": true,
                  "type": "uritemplate",
                  "value": "/{tenantid}/erp/employees"
                },
                "time": {
                  "required": true,
                  "type": "datetime"
                },
                "type": {
                  "required": true,
                  "type": "string",
                  "value": "Contoso.ERP.Events.EmployeeDeleted"
                }
              }
            }
          },
          "versionscount": 1
        },
        "Contoso.ERP.Events.EmployeeUpdated": {
          "messageid": "Contoso.ERP.Events.EmployeeUpdated",
          "self": "#/messagegroups/Contoso.ERP.EmployeeEvents/messages/Contoso.ERP.Events.EmployeeUpdated",
          "xid": "/messagegroups/Contoso.ERP.EmployeeEvents/messages/Contoso.ERP.Events.EmployeeUpdated",
          "metaurl": "#/messagegroups/Contoso.ERP.EmployeeEvents/messages/Contoso.ERP.Events.EmployeeUpdated/meta",
          "meta": {
            "messageid": "Contoso.ERP.Events.EmployeeUpdated",
            "self": "#/messagegroups/Contoso.ERP.EmployeeEvents/messages/Contoso.ERP.Events.EmployeeUpdated/meta",
            "xid": "/messagegroups/Contoso.ERP.EmployeeEvents/messages/Contoso.ERP.Events.EmployeeUpdated/meta",
            "epoch": 1,
            "createdat": "2025-02-26T13:09:22.902623885Z",
            "modifiedat": "2025-02-26T13:09:22.902623885Z",
            "readonly": false,
            "compatibility": "none",
            "defaultversionid": "1",
            "defaultversionurl": "#/messagegroups/Contoso.ERP.EmployeeEvents/messages/Contoso.ERP.Events.EmployeeUpdated/versions/1",
            "defaultversionsticky": false
          },
          "versionsurl": "#/messagegroups/Contoso.ERP.EmployeeEvents/messages/Contoso.ERP.Events.EmployeeUpdated/versions",
          "versions": {
            "1": {
              "messageid": "Contoso.ERP.Events.EmployeeUpdated",
              "versionid": "1",
              "self": "#/messagegroups/Contoso.ERP.EmployeeEvents/messages/Contoso.ERP.Events.EmployeeUpdated/versions/1",
              "xid": "/messagegroups/Contoso.ERP.EmployeeEvents/messages/Contoso.ERP.Events.EmployeeUpdated/versions/1",
              "epoch": 1,
              "isdefault": true,
              "description": "An employee has been updated",
              "createdat": "2025-02-26T13:09:22.902623885Z",
              "modifiedat": "2025-02-26T13:09:22.902623885Z",
              "dataschemaformat": "JSONSchema/draft-07",
              "dataschemauri": "#/schemagroups/Contoso.ERP.Events/schemas/employeeUpdatedData",
              "envelope": "CloudEvents/1.0",
              "envelopemetadata": {
                "id": {
                  "required": true,
                  "type": "string"
                },
                "source": {
                  "required": true,
                  "type": "uritemplate",
                  "value": "/{tenantid}/erp/employees"
                },
                "time": {
                  "required": true,
                  "type": "datetime"
                },
                "type": {
                  "required": true,
                  "type": "string",
                  "value": "Contoso.ERP.Events.EmployeeUpdated"
                }
              }
            }
          },
          "versionscount": 1
        }
      },
      "messagescount": 3
    },
    "Contoso.ERP.InventoryEvents": {
      "messagegroupid": "Contoso.ERP.InventoryEvents",
      "self": "#/messagegroups/Contoso.ERP.InventoryEvents",
      "xid": "/messagegroups/Contoso.ERP.InventoryEvents",
      "epoch": 1,
      "createdat": "2025-02-26T13:09:22.902623885Z",
      "modifiedat": "2025-02-26T13:09:22.902623885Z",
      "envelope": "CloudEvents/1.0",
      "messagesurl": "#/messagegroups/Contoso.ERP.InventoryEvents/messages",
      "messages": {
        "Contoso.ERP.Events.InventoryUpdated": {
          "messageid": "Contoso.ERP.Events.InventoryUpdated",
          "self": "#/messagegroups/Contoso.ERP.InventoryEvents/messages/Contoso.ERP.Events.InventoryUpdated",
          "xid": "/messagegroups/Contoso.ERP.InventoryEvents/messages/Contoso.ERP.Events.InventoryUpdated",
          "metaurl": "#/messagegroups/Contoso.ERP.InventoryEvents/messages/Contoso.ERP.Events.InventoryUpdated/meta",
          "meta": {
            "messageid": "Contoso.ERP.Events.InventoryUpdated",
            "self": "#/messagegroups/Contoso.ERP.InventoryEvents/messages/Contoso.ERP.Events.InventoryUpdated/meta",
            "xid": "/messagegroups/Contoso.ERP.InventoryEvents/messages/Contoso.ERP.Events.InventoryUpdated/meta",
            "epoch": 1,
            "createdat": "2025-02-26T13:09:22.902623885Z",
            "modifiedat": "2025-02-26T13:09:22.902623885Z",
            "readonly": false,
            "compatibility": "none",
            "defaultversionid": "1",
            "defaultversionurl": "#/messagegroups/Contoso.ERP.InventoryEvents/messages/Contoso.ERP.Events.InventoryUpdated/versions/1",
            "defaultversionsticky": false
          },
          "versionsurl": "#/messagegroups/Contoso.ERP.InventoryEvents/messages/Contoso.ERP.Events.InventoryUpdated/versions",
          "versions": {
            "1": {
              "messageid": "Contoso.ERP.Events.InventoryUpdated",
              "versionid": "1",
              "self": "#/messagegroups/Contoso.ERP.InventoryEvents/messages/Contoso.ERP.Events.InventoryUpdated/versions/1",
              "xid": "/messagegroups/Contoso.ERP.InventoryEvents/messages/Contoso.ERP.Events.InventoryUpdated/versions/1",
              "epoch": 1,
              "isdefault": true,
              "description": "Inventory has been updated",
              "createdat": "2025-02-26T13:09:22.902623885Z",
              "modifiedat": "2025-02-26T13:09:22.902623885Z",
              "dataschemaformat": "JSONSchema/draft-07",
              "dataschemauri": "#/schemagroups/Contoso.ERP.Events/schemas/inventoryData",
              "envelope": "CloudEvents/1.0",
              "envelopemetadata": {
                "id": {
                  "description": "The id of the inventory update event",
                  "required": true,
                  "type": "string"
                },
                "source": {
                  "required": true,
                  "type": "uritemplate",
                  "value": "/erp/inventory"
                },
                "time": {
                  "required": true,
                  "type": "datetime"
                },
                "type": {
                  "description": "The type of the inventory update event",
                  "required": true,
                  "type": "string",
                  "value": "Contoso.ERP.Events.InventoryUpdated"
                }
              }
            }
          },
          "versionscount": 1
        }
      },
      "messagescount": 1
    },
    "Contoso.ERP.PaymentEvents": {
      "messagegroupid": "Contoso.ERP.PaymentEvents",
      "self": "#/messagegroups/Contoso.ERP.PaymentEvents",
      "xid": "/messagegroups/Contoso.ERP.PaymentEvents",
      "epoch": 1,
      "createdat": "2025-02-26T13:09:22.902623885Z",
      "modifiedat": "2025-02-26T13:09:22.902623885Z",
      "envelope": "CloudEvents/1.0",
      "messagesurl": "#/messagegroups/Contoso.ERP.PaymentEvents/messages",
      "messages": {
        "Contoso.ERP.Events.PaymentsReceived": {
          "messageid": "Contoso.ERP.Events.PaymentsReceived",
          "self": "#/messagegroups/Contoso.ERP.PaymentEvents/messages/Contoso.ERP.Events.PaymentsReceived",
          "xid": "/messagegroups/Contoso.ERP.PaymentEvents/messages/Contoso.ERP.Events.PaymentsReceived",
          "metaurl": "#/messagegroups/Contoso.ERP.PaymentEvents/messages/Contoso.ERP.Events.PaymentsReceived/meta",
          "meta": {
            "messageid": "Contoso.ERP.Events.PaymentsReceived",
            "self": "#/messagegroups/Contoso.ERP.PaymentEvents/messages/Contoso.ERP.Events.PaymentsReceived/meta",
            "xid": "/messagegroups/Contoso.ERP.PaymentEvents/messages/Contoso.ERP.Events.PaymentsReceived/meta",
            "epoch": 1,
            "createdat": "2025-02-26T13:09:22.902623885Z",
            "modifiedat": "2025-02-26T13:09:22.902623885Z",
            "readonly": false,
            "compatibility": "none",
            "defaultversionid": "1",
            "defaultversionurl": "#/messagegroups/Contoso.ERP.PaymentEvents/messages/Contoso.ERP.Events.PaymentsReceived/versions/1",
            "defaultversionsticky": false
          },
          "versionsurl": "#/messagegroups/Contoso.ERP.PaymentEvents/messages/Contoso.ERP.Events.PaymentsReceived/versions",
          "versions": {
            "1": {
              "messageid": "Contoso.ERP.Events.PaymentsReceived",
              "versionid": "1",
              "self": "#/messagegroups/Contoso.ERP.PaymentEvents/messages/Contoso.ERP.Events.PaymentsReceived/versions/1",
              "xid": "/messagegroups/Contoso.ERP.PaymentEvents/messages/Contoso.ERP.Events.PaymentsReceived/versions/1",
              "epoch": 1,
              "isdefault": true,
              "description": "A payment has been received",
              "createdat": "2025-02-26T13:09:22.902623885Z",
              "modifiedat": "2025-02-26T13:09:22.902623885Z",
              "dataschemaformat": "JSONSchema/draft-07",
              "dataschemauri": "#/schemagroups/Contoso.ERP.Events/schemas/paymentData",
              "envelope": "CloudEvents/1.0",
              "envelopemetadata": {
                "id": {
                  "required": true,
                  "type": "string"
                },
                "source": {
                  "required": true,
                  "type": "uritemplate",
                  "value": "/erp/payments"
                },
                "time": {
                  "required": true,
                  "type": "datetime"
                },
                "type": {
                  "required": true,
                  "type": "string",
                  "value": "Contoso.ERP.Events.PaymentsReceived"
                }
              }
            }
          },
          "versionscount": 1
        }
      },
      "messagescount": 1
    },
    "Contoso.ERP.ProductEvents": {
      "messagegroupid": "Contoso.ERP.ProductEvents",
      "self": "#/messagegroups/Contoso.ERP.ProductEvents",
      "xid": "/messagegroups/Contoso.ERP.ProductEvents",
      "epoch": 1,
      "createdat": "2025-02-26T13:09:22.902623885Z",
      "modifiedat": "2025-02-26T13:09:22.902623885Z",
      "envelope": "CloudEvents/1.0",
      "messagesurl": "#/messagegroups/Contoso.ERP.ProductEvents/messages",
      "messages": {
        "Contoso.ERP.Events.ProductAdded": {
          "messageid": "Contoso.ERP.Events.ProductAdded",
          "self": "#/messagegroups/Contoso.ERP.ProductEvents/messages/Contoso.ERP.Events.ProductAdded",
          "xid": "/messagegroups/Contoso.ERP.ProductEvents/messages/Contoso.ERP.Events.ProductAdded",
          "metaurl": "#/messagegroups/Contoso.ERP.ProductEvents/messages/Contoso.ERP.Events.ProductAdded/meta",
          "meta": {
            "messageid": "Contoso.ERP.Events.ProductAdded",
            "self": "#/messagegroups/Contoso.ERP.ProductEvents/messages/Contoso.ERP.Events.ProductAdded/meta",
            "xid": "/messagegroups/Contoso.ERP.ProductEvents/messages/Contoso.ERP.Events.ProductAdded/meta",
            "epoch": 1,
            "createdat": "2025-02-26T13:09:22.902623885Z",
            "modifiedat": "2025-02-26T13:09:22.902623885Z",
            "readonly": false,
            "compatibility": "none",
            "defaultversionid": "1",
            "defaultversionurl": "#/messagegroups/Contoso.ERP.ProductEvents/messages/Contoso.ERP.Events.ProductAdded/versions/1",
            "defaultversionsticky": false
          },
          "versionsurl": "#/messagegroups/Contoso.ERP.ProductEvents/messages/Contoso.ERP.Events.ProductAdded/versions",
          "versions": {
            "1": {
              "messageid": "Contoso.ERP.Events.ProductAdded",
              "versionid": "1",
              "self": "#/messagegroups/Contoso.ERP.ProductEvents/messages/Contoso.ERP.Events.ProductAdded/versions/1",
              "xid": "/messagegroups/Contoso.ERP.ProductEvents/messages/Contoso.ERP.Events.ProductAdded/versions/1",
              "epoch": 1,
              "isdefault": true,
              "description": "A product has been added",
              "createdat": "2025-02-26T13:09:22.902623885Z",
              "modifiedat": "2025-02-26T13:09:22.902623885Z",
              "dataschemaformat": "JSONSchema/draft-07",
              "dataschemauri": "#/schemagroups/Contoso.ERP.Events/schemas/productData",
              "envelope": "CloudEvents/1.0",
              "envelopemetadata": {
                "id": {
                  "required": true,
                  "type": "string"
                },
                "source": {
                  "required": true,
                  "type": "uritemplate",
                  "value": "/{tenantid}/erp/products"
                },
                "time": {
                  "required": true,
                  "type": "datetime"
                },
                "type": {
                  "required": true,
                  "type": "string",
                  "value": "Contoso.ERP.Events.ProductAdded"
                }
              }
            }
          },
          "versionscount": 1
        },
        "Contoso.ERP.Events.ProductDeleted": {
          "messageid": "Contoso.ERP.Events.ProductDeleted",
          "self": "#/messagegroups/Contoso.ERP.ProductEvents/messages/Contoso.ERP.Events.ProductDeleted",
          "xid": "/messagegroups/Contoso.ERP.ProductEvents/messages/Contoso.ERP.Events.ProductDeleted",
          "metaurl": "#/messagegroups/Contoso.ERP.ProductEvents/messages/Contoso.ERP.Events.ProductDeleted/meta",
          "meta": {
            "messageid": "Contoso.ERP.Events.ProductDeleted",
            "self": "#/messagegroups/Contoso.ERP.ProductEvents/messages/Contoso.ERP.Events.ProductDeleted/meta",
            "xid": "/messagegroups/Contoso.ERP.ProductEvents/messages/Contoso.ERP.Events.ProductDeleted/meta",
            "epoch": 1,
            "createdat": "2025-02-26T13:09:22.902623885Z",
            "modifiedat": "2025-02-26T13:09:22.902623885Z",
            "readonly": false,
            "compatibility": "none",
            "defaultversionid": "1",
            "defaultversionurl": "#/messagegroups/Contoso.ERP.ProductEvents/messages/Contoso.ERP.Events.ProductDeleted/versions/1",
            "defaultversionsticky": false
          },
          "versionsurl": "#/messagegroups/Contoso.ERP.ProductEvents/messages/Contoso.ERP.Events.ProductDeleted/versions",
          "versions": {
            "1": {
              "messageid": "Contoso.ERP.Events.ProductDeleted",
              "versionid": "1",
              "self": "#/messagegroups/Contoso.ERP.ProductEvents/messages/Contoso.ERP.Events.ProductDeleted/versions/1",
              "xid": "/messagegroups/Contoso.ERP.ProductEvents/messages/Contoso.ERP.Events.ProductDeleted/versions/1",
              "epoch": 1,
              "isdefault": true,
              "description": "A product has been deleted",
              "createdat": "2025-02-26T13:09:22.902623885Z",
              "modifiedat": "2025-02-26T13:09:22.902623885Z",
              "dataschemaformat": "JSONSchema/draft-07",
              "dataschemauri": "#/schemagroups/Contoso.ERP.Events/schemas/productDeletionData",
              "envelope": "CloudEvents/1.0",
              "envelopemetadata": {
                "id": {
                  "required": true,
                  "type": "string"
                },
                "source": {
                  "required": true,
                  "type": "uritemplate",
                  "value": "/{tenantid}/erp/products"
                },
                "time": {
                  "required": true,
                  "type": "datetime"
                },
                "type": {
                  "required": true,
                  "type": "string",
                  "value": "Contoso.ERP.Events.ProductDeleted"
                }
              }
            }
          },
          "versionscount": 1
        },
        "Contoso.ERP.Events.ProductUpdated": {
          "messageid": "Contoso.ERP.Events.ProductUpdated",
          "self": "#/messagegroups/Contoso.ERP.ProductEvents/messages/Contoso.ERP.Events.ProductUpdated",
          "xid": "/messagegroups/Contoso.ERP.ProductEvents/messages/Contoso.ERP.Events.ProductUpdated",
          "metaurl": "#/messagegroups/Contoso.ERP.ProductEvents/messages/Contoso.ERP.Events.ProductUpdated/meta",
          "meta": {
            "messageid": "Contoso.ERP.Events.ProductUpdated",
            "self": "#/messagegroups/Contoso.ERP.ProductEvents/messages/Contoso.ERP.Events.ProductUpdated/meta",
            "xid": "/messagegroups/Contoso.ERP.ProductEvents/messages/Contoso.ERP.Events.ProductUpdated/meta",
            "epoch": 1,
            "createdat": "2025-02-26T13:09:22.902623885Z",
            "modifiedat": "2025-02-26T13:09:22.902623885Z",
            "readonly": false,
            "compatibility": "none",
            "defaultversionid": "1",
            "defaultversionurl": "#/messagegroups/Contoso.ERP.ProductEvents/messages/Contoso.ERP.Events.ProductUpdated/versions/1",
            "defaultversionsticky": false
          },
          "versionsurl": "#/messagegroups/Contoso.ERP.ProductEvents/messages/Contoso.ERP.Events.ProductUpdated/versions",
          "versions": {
            "1": {
              "messageid": "Contoso.ERP.Events.ProductUpdated",
              "versionid": "1",
              "self": "#/messagegroups/Contoso.ERP.ProductEvents/messages/Contoso.ERP.Events.ProductUpdated/versions/1",
              "xid": "/messagegroups/Contoso.ERP.ProductEvents/messages/Contoso.ERP.Events.ProductUpdated/versions/1",
              "epoch": 1,
              "isdefault": true,
              "description": "A product has been updated",
              "createdat": "2025-02-26T13:09:22.902623885Z",
              "modifiedat": "2025-02-26T13:09:22.902623885Z",
              "dataschemaformat": "JSONSchema/draft-07",
              "dataschemauri": "#/schemagroups/Contoso.ERP.Events/schemas/productUpdatedData",
              "envelope": "CloudEvents/1.0",
              "envelopemetadata": {
                "id": {
                  "required": true,
                  "type": "string"
                },
                "source": {
                  "required": true,
                  "type": "uritemplate",
                  "value": "/{tenantid}/erp/products"
                },
                "time": {
                  "required": true,
                  "type": "datetime"
                },
                "type": {
                  "required": true,
                  "type": "string",
                  "value": "Contoso.ERP.Events.ProductUpdated"
                }
              }
            }
          },
          "versionscount": 1
        }
      },
      "messagescount": 3
    },
    "Contoso.ERP.PurchasingEvents": {
      "messagegroupid": "Contoso.ERP.PurchasingEvents",
      "self": "#/messagegroups/Contoso.ERP.PurchasingEvents",
      "xid": "/messagegroups/Contoso.ERP.PurchasingEvents",
      "epoch": 1,
      "createdat": "2025-02-26T13:09:22.902623885Z",
      "modifiedat": "2025-02-26T13:09:22.902623885Z",
      "envelope": "CloudEvents/1.0",
      "messagesurl": "#/messagegroups/Contoso.ERP.PurchasingEvents/messages",
      "messages": {
        "Contoso.ERP.Events.PurchaseOrderCreated": {
          "messageid": "Contoso.ERP.Events.PurchaseOrderCreated",
          "self": "#/messagegroups/Contoso.ERP.PurchasingEvents/messages/Contoso.ERP.Events.PurchaseOrderCreated",
          "xid": "/messagegroups/Contoso.ERP.PurchasingEvents/messages/Contoso.ERP.Events.PurchaseOrderCreated",
          "metaurl": "#/messagegroups/Contoso.ERP.PurchasingEvents/messages/Contoso.ERP.Events.PurchaseOrderCreated/meta",
          "meta": {
            "messageid": "Contoso.ERP.Events.PurchaseOrderCreated",
            "self": "#/messagegroups/Contoso.ERP.PurchasingEvents/messages/Contoso.ERP.Events.PurchaseOrderCreated/meta",
            "xid": "/messagegroups/Contoso.ERP.PurchasingEvents/messages/Contoso.ERP.Events.PurchaseOrderCreated/meta",
            "epoch": 1,
            "createdat": "2025-02-26T13:09:22.902623885Z",
            "modifiedat": "2025-02-26T13:09:22.902623885Z",
            "readonly": false,
            "compatibility": "none",
            "defaultversionid": "1",
            "defaultversionurl": "#/messagegroups/Contoso.ERP.PurchasingEvents/messages/Contoso.ERP.Events.PurchaseOrderCreated/versions/1",
            "defaultversionsticky": false
          },
          "versionsurl": "#/messagegroups/Contoso.ERP.PurchasingEvents/messages/Contoso.ERP.Events.PurchaseOrderCreated/versions",
          "versions": {
            "1": {
              "messageid": "Contoso.ERP.Events.PurchaseOrderCreated",
              "versionid": "1",
              "self": "#/messagegroups/Contoso.ERP.PurchasingEvents/messages/Contoso.ERP.Events.PurchaseOrderCreated/versions/1",
              "xid": "/messagegroups/Contoso.ERP.PurchasingEvents/messages/Contoso.ERP.Events.PurchaseOrderCreated/versions/1",
              "epoch": 1,
              "isdefault": true,
              "description": "A purchase order has been created",
              "createdat": "2025-02-26T13:09:22.902623885Z",
              "modifiedat": "2025-02-26T13:09:22.902623885Z",
              "dataschemaformat": "JSONSchema/draft-07",
              "dataschemauri": "#/schemagroups/Contoso.ERP.Events/schemas/purchaseOrderData",
              "envelope": "CloudEvents/1.0",
              "envelopemetadata": {
                "id": {
                  "required": true,
                  "type": "string"
                },
                "source": {
                  "required": true,
                  "type": "uritemplate",
                  "value": "/{tenantid}/erp/purchasing"
                },
                "time": {
                  "required": true,
                  "type": "datetime"
                },
                "type": {
                  "required": true,
                  "type": "string",
                  "value": "Contoso.ERP.Events.PurchaseOrderCreated"
                }
              }
            }
          },
          "versionscount": 1
        },
        "Contoso.ERP.Events.PurchaseOrderDeleted": {
          "messageid": "Contoso.ERP.Events.PurchaseOrderDeleted",
          "self": "#/messagegroups/Contoso.ERP.PurchasingEvents/messages/Contoso.ERP.Events.PurchaseOrderDeleted",
          "xid": "/messagegroups/Contoso.ERP.PurchasingEvents/messages/Contoso.ERP.Events.PurchaseOrderDeleted",
          "metaurl": "#/messagegroups/Contoso.ERP.PurchasingEvents/messages/Contoso.ERP.Events.PurchaseOrderDeleted/meta",
          "meta": {
            "messageid": "Contoso.ERP.Events.PurchaseOrderDeleted",
            "self": "#/messagegroups/Contoso.ERP.PurchasingEvents/messages/Contoso.ERP.Events.PurchaseOrderDeleted/meta",
            "xid": "/messagegroups/Contoso.ERP.PurchasingEvents/messages/Contoso.ERP.Events.PurchaseOrderDeleted/meta",
            "epoch": 1,
            "createdat": "2025-02-26T13:09:22.902623885Z",
            "modifiedat": "2025-02-26T13:09:22.902623885Z",
            "readonly": false,
            "compatibility": "none",
            "defaultversionid": "1",
            "defaultversionurl": "#/messagegroups/Contoso.ERP.PurchasingEvents/messages/Contoso.ERP.Events.PurchaseOrderDeleted/versions/1",
            "defaultversionsticky": false
          },
          "versionsurl": "#/messagegroups/Contoso.ERP.PurchasingEvents/messages/Contoso.ERP.Events.PurchaseOrderDeleted/versions",
          "versions": {
            "1": {
              "messageid": "Contoso.ERP.Events.PurchaseOrderDeleted",
              "versionid": "1",
              "self": "#/messagegroups/Contoso.ERP.PurchasingEvents/messages/Contoso.ERP.Events.PurchaseOrderDeleted/versions/1",
              "xid": "/messagegroups/Contoso.ERP.PurchasingEvents/messages/Contoso.ERP.Events.PurchaseOrderDeleted/versions/1",
              "epoch": 1,
              "isdefault": true,
              "description": "A purchase order has been deleted",
              "createdat": "2025-02-26T13:09:22.902623885Z",
              "modifiedat": "2025-02-26T13:09:22.902623885Z",
              "envelope": "CloudEvents/1.0",
              "envelopemetadata": {
                "id": {
                  "required": true,
                  "type": "string"
                },
                "source": {
                  "required": true,
                  "type": "uritemplate",
                  "value": "/{tenantid}/erp/purchasing"
                },
                "time": {
                  "required": true,
                  "type": "datetime"
                },
                "type": {
                  "required": true,
                  "type": "string",
                  "value": "Contoso.ERP.Events.PurchaseOrderDeleted"
                }
              }
            }
          },
          "versionscount": 1
        },
        "Contoso.ERP.Events.PurchaseOrderUpdated": {
          "messageid": "Contoso.ERP.Events.PurchaseOrderUpdated",
          "self": "#/messagegroups/Contoso.ERP.PurchasingEvents/messages/Contoso.ERP.Events.PurchaseOrderUpdated",
          "xid": "/messagegroups/Contoso.ERP.PurchasingEvents/messages/Contoso.ERP.Events.PurchaseOrderUpdated",
          "metaurl": "#/messagegroups/Contoso.ERP.PurchasingEvents/messages/Contoso.ERP.Events.PurchaseOrderUpdated/meta",
          "meta": {
            "messageid": "Contoso.ERP.Events.PurchaseOrderUpdated",
            "self": "#/messagegroups/Contoso.ERP.PurchasingEvents/messages/Contoso.ERP.Events.PurchaseOrderUpdated/meta",
            "xid": "/messagegroups/Contoso.ERP.PurchasingEvents/messages/Contoso.ERP.Events.PurchaseOrderUpdated/meta",
            "epoch": 1,
            "createdat": "2025-02-26T13:09:22.902623885Z",
            "modifiedat": "2025-02-26T13:09:22.902623885Z",
            "readonly": false,
            "compatibility": "none",
            "defaultversionid": "1",
            "defaultversionurl": "#/messagegroups/Contoso.ERP.PurchasingEvents/messages/Contoso.ERP.Events.PurchaseOrderUpdated/versions/1",
            "defaultversionsticky": false
          },
          "versionsurl": "#/messagegroups/Contoso.ERP.PurchasingEvents/messages/Contoso.ERP.Events.PurchaseOrderUpdated/versions",
          "versions": {
            "1": {
              "messageid": "Contoso.ERP.Events.PurchaseOrderUpdated",
              "versionid": "1",
              "self": "#/messagegroups/Contoso.ERP.PurchasingEvents/messages/Contoso.ERP.Events.PurchaseOrderUpdated/versions/1",
              "xid": "/messagegroups/Contoso.ERP.PurchasingEvents/messages/Contoso.ERP.Events.PurchaseOrderUpdated/versions/1",
              "epoch": 1,
              "isdefault": true,
              "description": "A purchase order has been updated",
              "createdat": "2025-02-26T13:09:22.902623885Z",
              "modifiedat": "2025-02-26T13:09:22.902623885Z",
              "dataschemaformat": "JSONSchema/draft-07",
              "dataschemauri": "#/schemagroups/Contoso.ERP.Events/schemas/purchaseOrderUpdatedData",
              "envelope": "CloudEvents/1.0",
              "envelopemetadata": {
                "id": {
                  "required": true,
                  "type": "string"
                },
                "source": {
                  "required": true,
                  "type": "uritemplate",
                  "value": "/{tenantid}/erp/purchasing"
                },
                "time": {
                  "required": true,
                  "type": "datetime"
                },
                "type": {
                  "required": true,
                  "type": "string",
                  "value": "Contoso.ERP.Events.PurchaseOrderUpdated"
                }
              }
            }
          },
          "versionscount": 1
        }
      },
      "messagescount": 3
    },
    "Contoso.ERP.ReservationEvents": {
      "messagegroupid": "Contoso.ERP.ReservationEvents",
      "self": "#/messagegroups/Contoso.ERP.ReservationEvents",
      "xid": "/messagegroups/Contoso.ERP.ReservationEvents",
      "epoch": 1,
      "createdat": "2025-02-26T13:09:22.902623885Z",
      "modifiedat": "2025-02-26T13:09:22.902623885Z",
      "envelope": "CloudEvents/1.0",
      "messagesurl": "#/messagegroups/Contoso.ERP.ReservationEvents/messages",
      "messages": {
        "Contoso.ERP.Events.ReservationCancelled": {
          "messageid": "Contoso.ERP.Events.ReservationCancelled",
          "self": "#/messagegroups/Contoso.ERP.ReservationEvents/messages/Contoso.ERP.Events.ReservationCancelled",
          "xid": "/messagegroups/Contoso.ERP.ReservationEvents/messages/Contoso.ERP.Events.ReservationCancelled",
          "metaurl": "#/messagegroups/Contoso.ERP.ReservationEvents/messages/Contoso.ERP.Events.ReservationCancelled/meta",
          "meta": {
            "messageid": "Contoso.ERP.Events.ReservationCancelled",
            "self": "#/messagegroups/Contoso.ERP.ReservationEvents/messages/Contoso.ERP.Events.ReservationCancelled/meta",
            "xid": "/messagegroups/Contoso.ERP.ReservationEvents/messages/Contoso.ERP.Events.ReservationCancelled/meta",
            "epoch": 1,
            "createdat": "2025-02-26T13:09:22.902623885Z",
            "modifiedat": "2025-02-26T13:09:22.902623885Z",
            "readonly": false,
            "compatibility": "none",
            "defaultversionid": "1",
            "defaultversionurl": "#/messagegroups/Contoso.ERP.ReservationEvents/messages/Contoso.ERP.Events.ReservationCancelled/versions/1",
            "defaultversionsticky": false
          },
          "versionsurl": "#/messagegroups/Contoso.ERP.ReservationEvents/messages/Contoso.ERP.Events.ReservationCancelled/versions",
          "versions": {
            "1": {
              "messageid": "Contoso.ERP.Events.ReservationCancelled",
              "versionid": "1",
              "self": "#/messagegroups/Contoso.ERP.ReservationEvents/messages/Contoso.ERP.Events.ReservationCancelled/versions/1",
              "xid": "/messagegroups/Contoso.ERP.ReservationEvents/messages/Contoso.ERP.Events.ReservationCancelled/versions/1",
              "epoch": 1,
              "isdefault": true,
              "description": "A reservation has been cancelled",
              "createdat": "2025-02-26T13:09:22.902623885Z",
              "modifiedat": "2025-02-26T13:09:22.902623885Z",
              "dataschemaformat": "JSONSchema/draft-07",
              "dataschemauri": "#/schemagroups/Contoso.ERP.Events/schemas/cancellationData",
              "envelope": "CloudEvents/1.0",
              "envelopemetadata": {
                "id": {
                  "required": true,
                  "type": "string"
                },
                "source": {
                  "required": true,
                  "type": "uritemplate",
                  "value": "/erp/orders"
                },
                "time": {
                  "required": true,
                  "type": "datetime"
                },
                "type": {
                  "required": true,
                  "type": "string",
                  "value": "Contoso.ERP.Events.ReservationCancelled"
                }
              }
            }
          },
          "versionscount": 1
        },
        "Contoso.ERP.Events.ReservationPlaced": {
          "messageid": "Contoso.ERP.Events.ReservationPlaced",
          "self": "#/messagegroups/Contoso.ERP.ReservationEvents/messages/Contoso.ERP.Events.ReservationPlaced",
          "xid": "/messagegroups/Contoso.ERP.ReservationEvents/messages/Contoso.ERP.Events.ReservationPlaced",
          "metaurl": "#/messagegroups/Contoso.ERP.ReservationEvents/messages/Contoso.ERP.Events.ReservationPlaced/meta",
          "meta": {
            "messageid": "Contoso.ERP.Events.ReservationPlaced",
            "self": "#/messagegroups/Contoso.ERP.ReservationEvents/messages/Contoso.ERP.Events.ReservationPlaced/meta",
            "xid": "/messagegroups/Contoso.ERP.ReservationEvents/messages/Contoso.ERP.Events.ReservationPlaced/meta",
            "epoch": 1,
            "createdat": "2025-02-26T13:09:22.902623885Z",
            "modifiedat": "2025-02-26T13:09:22.902623885Z",
            "readonly": false,
            "compatibility": "none",
            "defaultversionid": "1",
            "defaultversionurl": "#/messagegroups/Contoso.ERP.ReservationEvents/messages/Contoso.ERP.Events.ReservationPlaced/versions/1",
            "defaultversionsticky": false
          },
          "versionsurl": "#/messagegroups/Contoso.ERP.ReservationEvents/messages/Contoso.ERP.Events.ReservationPlaced/versions",
          "versions": {
            "1": {
              "messageid": "Contoso.ERP.Events.ReservationPlaced",
              "versionid": "1",
              "self": "#/messagegroups/Contoso.ERP.ReservationEvents/messages/Contoso.ERP.Events.ReservationPlaced/versions/1",
              "xid": "/messagegroups/Contoso.ERP.ReservationEvents/messages/Contoso.ERP.Events.ReservationPlaced/versions/1",
              "epoch": 1,
              "isdefault": true,
              "description": "A reservation has been placed",
              "createdat": "2025-02-26T13:09:22.902623885Z",
              "modifiedat": "2025-02-26T13:09:22.902623885Z",
              "dataschemaformat": "JSONSchema/draft-07",
              "dataschemauri": "#/schemagroups/Contoso.ERP.Events/schemas/orderData",
              "envelope": "CloudEvents/1.0",
              "envelopemetadata": {
                "id": {
                  "required": true,
                  "type": "string"
                },
                "source": {
                  "required": true,
                  "type": "uritemplate",
                  "value": "/erp/orders"
                },
                "time": {
                  "required": true,
                  "type": "datetime"
                },
                "type": {
                  "required": true,
                  "type": "string",
                  "value": "Contoso.ERP.Events.ReservationPlaced"
                }
              }
            }
          },
          "versionscount": 1
        },
        "Contoso.ERP.Events.ReservationRefunded": {
          "messageid": "Contoso.ERP.Events.ReservationRefunded",
          "self": "#/messagegroups/Contoso.ERP.ReservationEvents/messages/Contoso.ERP.Events.ReservationRefunded",
          "xid": "/messagegroups/Contoso.ERP.ReservationEvents/messages/Contoso.ERP.Events.ReservationRefunded",
          "metaurl": "#/messagegroups/Contoso.ERP.ReservationEvents/messages/Contoso.ERP.Events.ReservationRefunded/meta",
          "meta": {
            "messageid": "Contoso.ERP.Events.ReservationRefunded",
            "self": "#/messagegroups/Contoso.ERP.ReservationEvents/messages/Contoso.ERP.Events.ReservationRefunded/meta",
            "xid": "/messagegroups/Contoso.ERP.ReservationEvents/messages/Contoso.ERP.Events.ReservationRefunded/meta",
            "epoch": 1,
            "createdat": "2025-02-26T13:09:22.902623885Z",
            "modifiedat": "2025-02-26T13:09:22.902623885Z",
            "readonly": false,
            "compatibility": "none",
            "defaultversionid": "1",
            "defaultversionurl": "#/messagegroups/Contoso.ERP.ReservationEvents/messages/Contoso.ERP.Events.ReservationRefunded/versions/1",
            "defaultversionsticky": false
          },
          "versionsurl": "#/messagegroups/Contoso.ERP.ReservationEvents/messages/Contoso.ERP.Events.ReservationRefunded/versions",
          "versions": {
            "1": {
              "messageid": "Contoso.ERP.Events.ReservationRefunded",
              "versionid": "1",
              "self": "#/messagegroups/Contoso.ERP.ReservationEvents/messages/Contoso.ERP.Events.ReservationRefunded/versions/1",
              "xid": "/messagegroups/Contoso.ERP.ReservationEvents/messages/Contoso.ERP.Events.ReservationRefunded/versions/1",
              "epoch": 1,
              "isdefault": true,
              "description": "A reservation has been refunded",
              "createdat": "2025-02-26T13:09:22.902623885Z",
              "modifiedat": "2025-02-26T13:09:22.902623885Z",
              "dataschemaformat": "JSONSchema/draft-07",
              "dataschemauri": "#/schemagroups/Contoso.ERP.Events/schemas/refundData",
              "envelope": "CloudEvents/1.0",
              "envelopemetadata": {
                "id": {
                  "required": true,
                  "type": "string"
                },
                "source": {
                  "required": true,
                  "type": "uritemplate",
                  "value": "/erp/orders"
                },
                "time": {
                  "required": true,
                  "type": "datetime"
                },
                "type": {
                  "required": true,
                  "type": "string",
                  "value": "Contoso.ERP.Events.ReservationRefunded"
                }
              }
            }
          },
          "versionscount": 1
        }
      },
      "messagescount": 3
    },
    "Contoso.ERP.ShippingEvents": {
      "messagegroupid": "Contoso.ERP.ShippingEvents",
      "self": "#/messagegroups/Contoso.ERP.ShippingEvents",
      "xid": "/messagegroups/Contoso.ERP.ShippingEvents",
      "epoch": 1,
      "createdat": "2025-02-26T13:09:22.902623885Z",
      "modifiedat": "2025-02-26T13:09:22.902623885Z",
      "envelope": "CloudEvents/1.0",
      "messagesurl": "#/messagegroups/Contoso.ERP.ShippingEvents/messages",
      "messages": {
        "Contoso.ERP.Events.ReturnRequested": {
          "messageid": "Contoso.ERP.Events.ReturnRequested",
          "self": "#/messagegroups/Contoso.ERP.ShippingEvents/messages/Contoso.ERP.Events.ReturnRequested",
          "xid": "/messagegroups/Contoso.ERP.ShippingEvents/messages/Contoso.ERP.Events.ReturnRequested",
          "metaurl": "#/messagegroups/Contoso.ERP.ShippingEvents/messages/Contoso.ERP.Events.ReturnRequested/meta",
          "meta": {
            "messageid": "Contoso.ERP.Events.ReturnRequested",
            "self": "#/messagegroups/Contoso.ERP.ShippingEvents/messages/Contoso.ERP.Events.ReturnRequested/meta",
            "xid": "/messagegroups/Contoso.ERP.ShippingEvents/messages/Contoso.ERP.Events.ReturnRequested/meta",
            "epoch": 1,
            "createdat": "2025-02-26T13:09:22.902623885Z",
            "modifiedat": "2025-02-26T13:09:22.902623885Z",
            "readonly": false,
            "compatibility": "none",
            "defaultversionid": "1",
            "defaultversionurl": "#/messagegroups/Contoso.ERP.ShippingEvents/messages/Contoso.ERP.Events.ReturnRequested/versions/1",
            "defaultversionsticky": false
          },
          "versionsurl": "#/messagegroups/Contoso.ERP.ShippingEvents/messages/Contoso.ERP.Events.ReturnRequested/versions",
          "versions": {
            "1": {
              "messageid": "Contoso.ERP.Events.ReturnRequested",
              "versionid": "1",
              "self": "#/messagegroups/Contoso.ERP.ShippingEvents/messages/Contoso.ERP.Events.ReturnRequested/versions/1",
              "xid": "/messagegroups/Contoso.ERP.ShippingEvents/messages/Contoso.ERP.Events.ReturnRequested/versions/1",
              "epoch": 1,
              "isdefault": true,
              "description": "A return has been requested",
              "createdat": "2025-02-26T13:09:22.902623885Z",
              "modifiedat": "2025-02-26T13:09:22.902623885Z",
              "dataschemaformat": "JSONSchema/draft-07",
              "dataschemauri": "#/schemagroups/Contoso.ERP.Events/schemas/returnData",
              "envelope": "CloudEvents/1.0",
              "envelopemetadata": {
                "id": {
                  "required": true,
                  "type": "string"
                },
                "source": {
                  "required": true,
                  "type": "uritemplate",
                  "value": "/erp/returns"
                },
                "time": {
                  "required": true,
                  "type": "datetime"
                },
                "type": {
                  "required": true,
                  "type": "string",
                  "value": "Contoso.ERP.Events.ReturnRequested"
                }
              }
            }
          },
          "versionscount": 1
        },
        "Contoso.ERP.Events.ShipmentAccepted": {
          "messageid": "Contoso.ERP.Events.ShipmentAccepted",
          "self": "#/messagegroups/Contoso.ERP.ShippingEvents/messages/Contoso.ERP.Events.ShipmentAccepted",
          "xid": "/messagegroups/Contoso.ERP.ShippingEvents/messages/Contoso.ERP.Events.ShipmentAccepted",
          "metaurl": "#/messagegroups/Contoso.ERP.ShippingEvents/messages/Contoso.ERP.Events.ShipmentAccepted/meta",
          "meta": {
            "messageid": "Contoso.ERP.Events.ShipmentAccepted",
            "self": "#/messagegroups/Contoso.ERP.ShippingEvents/messages/Contoso.ERP.Events.ShipmentAccepted/meta",
            "xid": "/messagegroups/Contoso.ERP.ShippingEvents/messages/Contoso.ERP.Events.ShipmentAccepted/meta",
            "epoch": 1,
            "createdat": "2025-02-26T13:09:22.902623885Z",
            "modifiedat": "2025-02-26T13:09:22.902623885Z",
            "readonly": false,
            "compatibility": "none",
            "defaultversionid": "1",
            "defaultversionurl": "#/messagegroups/Contoso.ERP.ShippingEvents/messages/Contoso.ERP.Events.ShipmentAccepted/versions/1",
            "defaultversionsticky": false
          },
          "versionsurl": "#/messagegroups/Contoso.ERP.ShippingEvents/messages/Contoso.ERP.Events.ShipmentAccepted/versions",
          "versions": {
            "1": {
              "messageid": "Contoso.ERP.Events.ShipmentAccepted",
              "versionid": "1",
              "self": "#/messagegroups/Contoso.ERP.ShippingEvents/messages/Contoso.ERP.Events.ShipmentAccepted/versions/1",
              "xid": "/messagegroups/Contoso.ERP.ShippingEvents/messages/Contoso.ERP.Events.ShipmentAccepted/versions/1",
              "epoch": 1,
              "isdefault": true,
              "description": "A shipment has been accepted",
              "createdat": "2025-02-26T13:09:22.902623885Z",
              "modifiedat": "2025-02-26T13:09:22.902623885Z",
              "dataschemaformat": "JSONSchema/draft-07",
              "dataschemauri": "#/schemagroups/Contoso.ERP.Events/schemas/shipmentData",
              "envelope": "CloudEvents/1.0",
              "envelopemetadata": {
                "id": {
                  "required": true,
                  "type": "string"
                },
                "source": {
                  "required": true,
                  "type": "uritemplate",
                  "value": "/erp/shipments"
                },
                "time": {
                  "required": true,
                  "type": "datetime"
                },
                "type": {
                  "required": true,
                  "type": "string",
                  "value": "Contoso.ERP.Events.ShipmentAccepted"
                }
              }
            }
          },
          "versionscount": 1
        },
        "Contoso.ERP.Events.ShipmentRejected": {
          "messageid": "Contoso.ERP.Events.ShipmentRejected",
          "self": "#/messagegroups/Contoso.ERP.ShippingEvents/messages/Contoso.ERP.Events.ShipmentRejected",
          "xid": "/messagegroups/Contoso.ERP.ShippingEvents/messages/Contoso.ERP.Events.ShipmentRejected",
          "metaurl": "#/messagegroups/Contoso.ERP.ShippingEvents/messages/Contoso.ERP.Events.ShipmentRejected/meta",
          "meta": {
            "messageid": "Contoso.ERP.Events.ShipmentRejected",
            "self": "#/messagegroups/Contoso.ERP.ShippingEvents/messages/Contoso.ERP.Events.ShipmentRejected/meta",
            "xid": "/messagegroups/Contoso.ERP.ShippingEvents/messages/Contoso.ERP.Events.ShipmentRejected/meta",
            "epoch": 1,
            "createdat": "2025-02-26T13:09:22.902623885Z",
            "modifiedat": "2025-02-26T13:09:22.902623885Z",
            "readonly": false,
            "compatibility": "none",
            "defaultversionid": "1",
            "defaultversionurl": "#/messagegroups/Contoso.ERP.ShippingEvents/messages/Contoso.ERP.Events.ShipmentRejected/versions/1",
            "defaultversionsticky": false
          },
          "versionsurl": "#/messagegroups/Contoso.ERP.ShippingEvents/messages/Contoso.ERP.Events.ShipmentRejected/versions",
          "versions": {
            "1": {
              "messageid": "Contoso.ERP.Events.ShipmentRejected",
              "versionid": "1",
              "self": "#/messagegroups/Contoso.ERP.ShippingEvents/messages/Contoso.ERP.Events.ShipmentRejected/versions/1",
              "xid": "/messagegroups/Contoso.ERP.ShippingEvents/messages/Contoso.ERP.Events.ShipmentRejected/versions/1",
              "epoch": 1,
              "isdefault": true,
              "description": "A shipment has been rejected",
              "createdat": "2025-02-26T13:09:22.902623885Z",
              "modifiedat": "2025-02-26T13:09:22.902623885Z",
              "dataschemaformat": "JSONSchema/draft-07",
              "dataschemauri": "#/schemagroups/Contoso.ERP.Events/schemas/shipmentData",
              "envelope": "CloudEvents/1.0",
              "envelopemetadata": {
                "id": {
                  "required": true,
                  "type": "string"
                },
                "source": {
                  "required": true,
                  "type": "uritemplate",
                  "value": "/erp/shipments"
                },
                "time": {
                  "required": true,
                  "type": "datetime"
                },
                "type": {
                  "required": true,
                  "type": "string",
                  "value": "Contoso.ERP.Events.ShipmentRejected"
                }
              }
            }
          },
          "versionscount": 1
        }
      },
      "messagescount": 3
    }
  },
  "messagegroupscount": 7,
  "schemagroupsurl": "#/schemagroups",
  "schemagroups": {
    "Contoso.ERP.Events": {
      "schemagroupid": "Contoso.ERP.Events",
      "self": "#/schemagroups/Contoso.ERP.Events",
      "xid": "/schemagroups/Contoso.ERP.Events",
      "epoch": 1,
      "createdat": "2025-02-26T13:09:22.902623885Z",
      "modifiedat": "2025-02-26T13:09:22.902623885Z",
      "schemasurl": "#/schemagroups/Contoso.ERP.Events/schemas",
      "schemas": {
        "cancellationData": {
          "schemaid": "cancellationData",
          "self": "#/schemagroups/Contoso.ERP.Events/schemas/cancellationData",
          "xid": "/schemagroups/Contoso.ERP.Events/schemas/cancellationData",
          "metaurl": "#/schemagroups/Contoso.ERP.Events/schemas/cancellationData/meta",
          "meta": {
            "schemaid": "cancellationData",
            "self": "#/schemagroups/Contoso.ERP.Events/schemas/cancellationData/meta",
            "xid": "/schemagroups/Contoso.ERP.Events/schemas/cancellationData/meta",
            "epoch": 1,
            "createdat": "2025-02-26T13:09:22.902623885Z",
            "modifiedat": "2025-02-26T13:09:22.902623885Z",
            "readonly": false,
            "compatibility": "none",
            "defaultversionid": "1",
            "defaultversionurl": "#/schemagroups/Contoso.ERP.Events/schemas/cancellationData/versions/1",
            "defaultversionsticky": false
          },
          "versionsurl": "#/schemagroups/Contoso.ERP.Events/schemas/cancellationData/versions",
          "versions": {
            "1": {
              "schemaid": "cancellationData",
              "versionid": "1",
              "self": "#/schemagroups/Contoso.ERP.Events/schemas/cancellationData/versions/1",
              "xid": "/schemagroups/Contoso.ERP.Events/schemas/cancellationData/versions/1",
              "epoch": 1,
              "isdefault": true,
              "createdat": "2025-02-26T13:09:22.902623885Z",
              "modifiedat": "2025-02-26T13:09:22.902623885Z",
              "contenttype": "application/json",
              "format": "JSONSchema/draft-07",
              "schema": {
                "properties": {
                  "orderId": {
                    "type": "string"
                  },
                  "reason": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "versionscount": 1
        },
        "employeeData": {
          "schemaid": "employeeData",
          "self": "#/schemagroups/Contoso.ERP.Events/schemas/employeeData",
          "xid": "/schemagroups/Contoso.ERP.Events/schemas/employeeData",
          "metaurl": "#/schemagroups/Contoso.ERP.Events/schemas/employeeData/meta",
          "meta": {
            "schemaid": "employeeData",
            "self": "#/schemagroups/Contoso.ERP.Events/schemas/employeeData/meta",
            "xid": "/schemagroups/Contoso.ERP.Events/schemas/employeeData/meta",
            "epoch": 1,
            "createdat": "2025-02-26T13:09:22.902623885Z",
            "modifiedat": "2025-02-26T13:09:22.902623885Z",
            "readonly": false,
            "compatibility": "none",
            "defaultversionid": "1",
            "defaultversionurl": "#/schemagroups/Contoso.ERP.Events/schemas/employeeData/versions/1",
            "defaultversionsticky": false
          },
          "versionsurl": "#/schemagroups/Contoso.ERP.Events/schemas/employeeData/versions",
          "versions": {
            "1": {
              "schemaid": "employeeData",
              "versionid": "1",
              "self": "#/schemagroups/Contoso.ERP.Events/schemas/employeeData/versions/1",
              "xid": "/schemagroups/Contoso.ERP.Events/schemas/employeeData/versions/1",
              "epoch": 1,
              "isdefault": true,
              "createdat": "2025-02-26T13:09:22.902623885Z",
              "modifiedat": "2025-02-26T13:09:22.902623885Z",
              "contenttype": "application/json",
              "format": "JSONSchema/draft-07",
              "schema": {
                "properties": {
                  "department": {
                    "type": "string"
                  },
                  "email": {
                    "description": "The employee email",
                    "format": "email",
                    "type": "string"
                  },
                  "employeeId": {
                    "description": "The employee id",
                    "type": "string"
                  },
                  "name": {
                    "description": "The employee name",
                    "type": "string"
                  },
                  "position": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "versionscount": 1
        },
        "employeeDeletionData": {
          "schemaid": "employeeDeletionData",
          "self": "#/schemagroups/Contoso.ERP.Events/schemas/employeeDeletionData",
          "xid": "/schemagroups/Contoso.ERP.Events/schemas/employeeDeletionData",
          "metaurl": "#/schemagroups/Contoso.ERP.Events/schemas/employeeDeletionData/meta",
          "meta": {
            "schemaid": "employeeDeletionData",
            "self": "#/schemagroups/Contoso.ERP.Events/schemas/employeeDeletionData/meta",
            "xid": "/schemagroups/Contoso.ERP.Events/schemas/employeeDeletionData/meta",
            "epoch": 1,
            "createdat": "2025-02-26T13:09:22.902623885Z",
            "modifiedat": "2025-02-26T13:09:22.902623885Z",
            "readonly": false,
            "compatibility": "none",
            "defaultversionid": "1",
            "defaultversionurl": "#/schemagroups/Contoso.ERP.Events/schemas/employeeDeletionData/versions/1",
            "defaultversionsticky": false
          },
          "versionsurl": "#/schemagroups/Contoso.ERP.Events/schemas/employeeDeletionData/versions",
          "versions": {
            "1": {
              "schemaid": "employeeDeletionData",
              "versionid": "1",
              "self": "#/schemagroups/Contoso.ERP.Events/schemas/employeeDeletionData/versions/1",
              "xid": "/schemagroups/Contoso.ERP.Events/schemas/employeeDeletionData/versions/1",
              "epoch": 1,
              "isdefault": true,
              "createdat": "2025-02-26T13:09:22.902623885Z",
              "modifiedat": "2025-02-26T13:09:22.902623885Z",
              "contenttype": "application/json",
              "format": "JSONSchema/draft-07",
              "schema": {
                "properties": {
                  "employeeId": {
                    "type": "string"
                  },
                  "reason": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "versionscount": 1
        },
        "employeeUpdatedData": {
          "schemaid": "employeeUpdatedData",
          "self": "#/schemagroups/Contoso.ERP.Events/schemas/employeeUpdatedData",
          "xid": "/schemagroups/Contoso.ERP.Events/schemas/employeeUpdatedData",
          "metaurl": "#/schemagroups/Contoso.ERP.Events/schemas/employeeUpdatedData/meta",
          "meta": {
            "schemaid": "employeeUpdatedData",
            "self": "#/schemagroups/Contoso.ERP.Events/schemas/employeeUpdatedData/meta",
            "xid": "/schemagroups/Contoso.ERP.Events/schemas/employeeUpdatedData/meta",
            "epoch": 1,
            "createdat": "2025-02-26T13:09:22.902623885Z",
            "modifiedat": "2025-02-26T13:09:22.902623885Z",
            "readonly": false,
            "compatibility": "none",
            "defaultversionid": "1",
            "defaultversionurl": "#/schemagroups/Contoso.ERP.Events/schemas/employeeUpdatedData/versions/1",
            "defaultversionsticky": false
          },
          "versionsurl": "#/schemagroups/Contoso.ERP.Events/schemas/employeeUpdatedData/versions",
          "versions": {
            "1": {
              "schemaid": "employeeUpdatedData",
              "versionid": "1",
              "self": "#/schemagroups/Contoso.ERP.Events/schemas/employeeUpdatedData/versions/1",
              "xid": "/schemagroups/Contoso.ERP.Events/schemas/employeeUpdatedData/versions/1",
              "epoch": 1,
              "isdefault": true,
              "createdat": "2025-02-26T13:09:22.902623885Z",
              "modifiedat": "2025-02-26T13:09:22.902623885Z",
              "contenttype": "application/json",
              "format": "JSONSchema/draft-07",
              "schema": {
                "properties": {
                  "department": {
                    "type": "string"
                  },
                  "email": {
                    "format": "email",
                    "type": "string"
                  },
                  "employeeId": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "position": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "versionscount": 1
        },
        "inventoryData": {
          "schemaid": "inventoryData",
          "self": "#/schemagroups/Contoso.ERP.Events/schemas/inventoryData",
          "xid": "/schemagroups/Contoso.ERP.Events/schemas/inventoryData",
          "metaurl": "#/schemagroups/Contoso.ERP.Events/schemas/inventoryData/meta",
          "meta": {
            "schemaid": "inventoryData",
            "self": "#/schemagroups/Contoso.ERP.Events/schemas/inventoryData/meta",
            "xid": "/schemagroups/Contoso.ERP.Events/schemas/inventoryData/meta",
            "epoch": 1,
            "createdat": "2025-02-26T13:09:22.902623885Z",
            "modifiedat": "2025-02-26T13:09:22.902623885Z",
            "readonly": false,
            "compatibility": "none",
            "defaultversionid": "1",
            "defaultversionurl": "#/schemagroups/Contoso.ERP.Events/schemas/inventoryData/versions/1",
            "defaultversionsticky": false
          },
          "versionsurl": "#/schemagroups/Contoso.ERP.Events/schemas/inventoryData/versions",
          "versions": {
            "1": {
              "schemaid": "inventoryData",
              "versionid": "1",
              "self": "#/schemagroups/Contoso.ERP.Events/schemas/inventoryData/versions/1",
              "xid": "/schemagroups/Contoso.ERP.Events/schemas/inventoryData/versions/1",
              "epoch": 1,
              "isdefault": true,
              "createdat": "2025-02-26T13:09:22.902623885Z",
              "modifiedat": "2025-02-26T13:09:22.902623885Z",
              "contenttype": "application/json",
              "format": "JSONSchema/draft-07",
              "schema": {
                "properties": {
                  "location": {
                    "type": "string"
                  },
                  "productId": {
                    "type": "string"
                  },
                  "quantity": {
                    "type": "number"
                  }
                },
                "type": "object"
              }
            }
          },
          "versionscount": 1
        },
        "orderData": {
          "schemaid": "orderData",
          "self": "#/schemagroups/Contoso.ERP.Events/schemas/orderData",
          "xid": "/schemagroups/Contoso.ERP.Events/schemas/orderData",
          "metaurl": "#/schemagroups/Contoso.ERP.Events/schemas/orderData/meta",
          "meta": {
            "schemaid": "orderData",
            "self": "#/schemagroups/Contoso.ERP.Events/schemas/orderData/meta",
            "xid": "/schemagroups/Contoso.ERP.Events/schemas/orderData/meta",
            "epoch": 1,
            "createdat": "2025-02-26T13:09:22.902623885Z",
            "modifiedat": "2025-02-26T13:09:22.902623885Z",
            "readonly": false,
            "compatibility": "none",
            "defaultversionid": "1",
            "defaultversionurl": "#/schemagroups/Contoso.ERP.Events/schemas/orderData/versions/1",
            "defaultversionsticky": false
          },
          "versionsurl": "#/schemagroups/Contoso.ERP.Events/schemas/orderData/versions",
          "versions": {
            "1": {
              "schemaid": "orderData",
              "versionid": "1",
              "self": "#/schemagroups/Contoso.ERP.Events/schemas/orderData/versions/1",
              "xid": "/schemagroups/Contoso.ERP.Events/schemas/orderData/versions/1",
              "epoch": 1,
              "isdefault": true,
              "createdat": "2025-02-26T13:09:22.902623885Z",
              "modifiedat": "2025-02-26T13:09:22.902623885Z",
              "contenttype": "application/json",
              "format": "JSONSchema/draft-07",
              "schema": {
                "properties": {
                  "customerId": {
                    "minLength": 1,
                    "type": "string"
                  },
                  "items": {
                    "items": {
                      "properties": {
                        "price": {
                          "minimum": 0,
                          "type": "number"
                        },
                        "productId": {
                          "minLength": 1,
                          "type": "string"
                        },
                        "quantity": {
                          "minimum": 0,
                          "type": "number"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "orderId": {
                    "minLength": 1,
                    "type": "string"
                  },
                  "total": {
                    "minimum": 0,
                    "type": "number"
                  }
                },
                "type": "object"
              }
            }
          },
          "versionscount": 1
        },
        "paymentData": {
          "schemaid": "paymentData",
          "self": "#/schemagroups/Contoso.ERP.Events/schemas/paymentData",
          "xid": "/schemagroups/Contoso.ERP.Events/schemas/paymentData",
          "metaurl": "#/schemagroups/Contoso.ERP.Events/schemas/paymentData/meta",
          "meta": {
            "schemaid": "paymentData",
            "self": "#/schemagroups/Contoso.ERP.Events/schemas/paymentData/meta",
            "xid": "/schemagroups/Contoso.ERP.Events/schemas/paymentData/meta",
            "epoch": 1,
            "createdat": "2025-02-26T13:09:22.902623885Z",
            "modifiedat": "2025-02-26T13:09:22.902623885Z",
            "readonly": false,
            "compatibility": "none",
            "defaultversionid": "1",
            "defaultversionurl": "#/schemagroups/Contoso.ERP.Events/schemas/paymentData/versions/1",
            "defaultversionsticky": false
          },
          "versionsurl": "#/schemagroups/Contoso.ERP.Events/schemas/paymentData/versions",
          "versions": {
            "1": {
              "schemaid": "paymentData",
              "versionid": "1",
              "self": "#/schemagroups/Contoso.ERP.Events/schemas/paymentData/versions/1",
              "xid": "/schemagroups/Contoso.ERP.Events/schemas/paymentData/versions/1",
              "epoch": 1,
              "isdefault": true,
              "createdat": "2025-02-26T13:09:22.902623885Z",
              "modifiedat": "2025-02-26T13:09:22.902623885Z",
              "contenttype": "application/json",
              "format": "JSONSchema/draft-07",
              "schema": {
                "properties": {
                  "amount": {
                    "minimum": 0,
                    "type": "number"
                  },
                  "orderId": {
                    "type": "string"
                  },
                  "paymentmethod": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "transactionId": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "versionscount": 1
        },
        "productData": {
          "schemaid": "productData",
          "self": "#/schemagroups/Contoso.ERP.Events/schemas/productData",
          "xid": "/schemagroups/Contoso.ERP.Events/schemas/productData",
          "metaurl": "#/schemagroups/Contoso.ERP.Events/schemas/productData/meta",
          "meta": {
            "schemaid": "productData",
            "self": "#/schemagroups/Contoso.ERP.Events/schemas/productData/meta",
            "xid": "/schemagroups/Contoso.ERP.Events/schemas/productData/meta",
            "epoch": 1,
            "createdat": "2025-02-26T13:09:22.902623885Z",
            "modifiedat": "2025-02-26T13:09:22.902623885Z",
            "readonly": false,
            "compatibility": "none",
            "defaultversionid": "1",
            "defaultversionurl": "#/schemagroups/Contoso.ERP.Events/schemas/productData/versions/1",
            "defaultversionsticky": false
          },
          "versionsurl": "#/schemagroups/Contoso.ERP.Events/schemas/productData/versions",
          "versions": {
            "1": {
              "schemaid": "productData",
              "versionid": "1",
              "self": "#/schemagroups/Contoso.ERP.Events/schemas/productData/versions/1",
              "xid": "/schemagroups/Contoso.ERP.Events/schemas/productData/versions/1",
              "epoch": 1,
              "isdefault": true,
              "createdat": "2025-02-26T13:09:22.902623885Z",
              "modifiedat": "2025-02-26T13:09:22.902623885Z",
              "contenttype": "application/json",
              "format": "JSONSchema/draft-07",
              "schema": {
                "properties": {
                  "category": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "price": {
                    "type": "number"
                  },
                  "productId": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "versionscount": 1
        },
        "productDeletionData": {
          "schemaid": "productDeletionData",
          "self": "#/schemagroups/Contoso.ERP.Events/schemas/productDeletionData",
          "xid": "/schemagroups/Contoso.ERP.Events/schemas/productDeletionData",
          "metaurl": "#/schemagroups/Contoso.ERP.Events/schemas/productDeletionData/meta",
          "meta": {
            "schemaid": "productDeletionData",
            "self": "#/schemagroups/Contoso.ERP.Events/schemas/productDeletionData/meta",
            "xid": "/schemagroups/Contoso.ERP.Events/schemas/productDeletionData/meta",
            "epoch": 1,
            "createdat": "2025-02-26T13:09:22.902623885Z",
            "modifiedat": "2025-02-26T13:09:22.902623885Z",
            "readonly": false,
            "compatibility": "none",
            "defaultversionid": "1",
            "defaultversionurl": "#/schemagroups/Contoso.ERP.Events/schemas/productDeletionData/versions/1",
            "defaultversionsticky": false
          },
          "versionsurl": "#/schemagroups/Contoso.ERP.Events/schemas/productDeletionData/versions",
          "versions": {
            "1": {
              "schemaid": "productDeletionData",
              "versionid": "1",
              "self": "#/schemagroups/Contoso.ERP.Events/schemas/productDeletionData/versions/1",
              "xid": "/schemagroups/Contoso.ERP.Events/schemas/productDeletionData/versions/1",
              "epoch": 1,
              "isdefault": true,
              "createdat": "2025-02-26T13:09:22.902623885Z",
              "modifiedat": "2025-02-26T13:09:22.902623885Z",
              "contenttype": "application/json",
              "format": "JSONSchema/draft-07",
              "schema": {
                "properties": {
                  "productId": {
                    "description": "The product id",
                    "type": "string"
                  },
                  "reason": {
                    "description": "The reason for deletion",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "versionscount": 1
        },
        "productUpdatedData": {
          "schemaid": "productUpdatedData",
          "self": "#/schemagroups/Contoso.ERP.Events/schemas/productUpdatedData",
          "xid": "/schemagroups/Contoso.ERP.Events/schemas/productUpdatedData",
          "metaurl": "#/schemagroups/Contoso.ERP.Events/schemas/productUpdatedData/meta",
          "meta": {
            "schemaid": "productUpdatedData",
            "self": "#/schemagroups/Contoso.ERP.Events/schemas/productUpdatedData/meta",
            "xid": "/schemagroups/Contoso.ERP.Events/schemas/productUpdatedData/meta",
            "epoch": 1,
            "createdat": "2025-02-26T13:09:22.902623885Z",
            "modifiedat": "2025-02-26T13:09:22.902623885Z",
            "readonly": false,
            "compatibility": "none",
            "defaultversionid": "1",
            "defaultversionurl": "#/schemagroups/Contoso.ERP.Events/schemas/productUpdatedData/versions/1",
            "defaultversionsticky": false
          },
          "versionsurl": "#/schemagroups/Contoso.ERP.Events/schemas/productUpdatedData/versions",
          "versions": {
            "1": {
              "schemaid": "productUpdatedData",
              "versionid": "1",
              "self": "#/schemagroups/Contoso.ERP.Events/schemas/productUpdatedData/versions/1",
              "xid": "/schemagroups/Contoso.ERP.Events/schemas/productUpdatedData/versions/1",
              "epoch": 1,
              "isdefault": true,
              "createdat": "2025-02-26T13:09:22.902623885Z",
              "modifiedat": "2025-02-26T13:09:22.902623885Z",
              "contenttype": "application/json",
              "format": "JSONSchema/draft-07",
              "schema": {
                "properties": {
                  "category": {
                    "description": "The product category",
                    "type": "string"
                  },
                  "description": {
                    "description": "The product description",
                    "type": "string"
                  },
                  "name": {
                    "description": "The product name",
                    "type": "string"
                  },
                  "price": {
                    "description": "The product price",
                    "type": "number"
                  },
                  "productId": {
                    "description": "The product id",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "versionscount": 1
        },
        "purchaseOrderData": {
          "schemaid": "purchaseOrderData",
          "self": "#/schemagroups/Contoso.ERP.Events/schemas/purchaseOrderData",
          "xid": "/schemagroups/Contoso.ERP.Events/schemas/purchaseOrderData",
          "metaurl": "#/schemagroups/Contoso.ERP.Events/schemas/purchaseOrderData/meta",
          "meta": {
            "schemaid": "purchaseOrderData",
            "self": "#/schemagroups/Contoso.ERP.Events/schemas/purchaseOrderData/meta",
            "xid": "/schemagroups/Contoso.ERP.Events/schemas/purchaseOrderData/meta",
            "epoch": 1,
            "createdat": "2025-02-26T13:09:22.902623885Z",
            "modifiedat": "2025-02-26T13:09:22.902623885Z",
            "readonly": false,
            "compatibility": "none",
            "defaultversionid": "1",
            "defaultversionurl": "#/schemagroups/Contoso.ERP.Events/schemas/purchaseOrderData/versions/1",
            "defaultversionsticky": false
          },
          "versionsurl": "#/schemagroups/Contoso.ERP.Events/schemas/purchaseOrderData/versions",
          "versions": {
            "1": {
              "schemaid": "purchaseOrderData",
              "versionid": "1",
              "self": "#/schemagroups/Contoso.ERP.Events/schemas/purchaseOrderData/versions/1",
              "xid": "/schemagroups/Contoso.ERP.Events/schemas/purchaseOrderData/versions/1",
              "epoch": 1,
              "isdefault": true,
              "createdat": "2025-02-26T13:09:22.902623885Z",
              "modifiedat": "2025-02-26T13:09:22.902623885Z",
              "contenttype": "application/json",
              "format": "JSONSchema/draft-07",
              "schema": {
                "properties": {
                  "items": {
                    "items": {
                      "properties": {
                        "productId": {
                          "type": "string"
                        },
                        "quantity": {
                          "type": "number"
                        },
                        "unitCost": {
                          "type": "number"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "purchaseOrderId": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "supplierName": {
                    "type": "string"
                  },
                  "totalCost": {
                    "type": "number"
                  }
                },
                "type": "object"
              }
            }
          },
          "versionscount": 1
        },
        "purchaseOrderDeletionData": {
          "schemaid": "purchaseOrderDeletionData",
          "self": "#/schemagroups/Contoso.ERP.Events/schemas/purchaseOrderDeletionData",
          "xid": "/schemagroups/Contoso.ERP.Events/schemas/purchaseOrderDeletionData",
          "metaurl": "#/schemagroups/Contoso.ERP.Events/schemas/purchaseOrderDeletionData/meta",
          "meta": {
            "schemaid": "purchaseOrderDeletionData",
            "self": "#/schemagroups/Contoso.ERP.Events/schemas/purchaseOrderDeletionData/meta",
            "xid": "/schemagroups/Contoso.ERP.Events/schemas/purchaseOrderDeletionData/meta",
            "epoch": 1,
            "createdat": "2025-02-26T13:09:22.902623885Z",
            "modifiedat": "2025-02-26T13:09:22.902623885Z",
            "readonly": false,
            "compatibility": "none",
            "defaultversionid": "1",
            "defaultversionurl": "#/schemagroups/Contoso.ERP.Events/schemas/purchaseOrderDeletionData/versions/1",
            "defaultversionsticky": false
          },
          "versionsurl": "#/schemagroups/Contoso.ERP.Events/schemas/purchaseOrderDeletionData/versions",
          "versions": {
            "1": {
              "schemaid": "purchaseOrderDeletionData",
              "versionid": "1",
              "self": "#/schemagroups/Contoso.ERP.Events/schemas/purchaseOrderDeletionData/versions/1",
              "xid": "/schemagroups/Contoso.ERP.Events/schemas/purchaseOrderDeletionData/versions/1",
              "epoch": 1,
              "isdefault": true,
              "createdat": "2025-02-26T13:09:22.902623885Z",
              "modifiedat": "2025-02-26T13:09:22.902623885Z",
              "contenttype": "application/json",
              "format": "JSONSchema/draft-07",
              "schema": {
                "properties": {
                  "purchaseOrderId": {
                    "type": "string"
                  },
                  "reason": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "versionscount": 1
        },
        "purchaseOrderUpdatedData": {
          "schemaid": "purchaseOrderUpdatedData",
          "self": "#/schemagroups/Contoso.ERP.Events/schemas/purchaseOrderUpdatedData",
          "xid": "/schemagroups/Contoso.ERP.Events/schemas/purchaseOrderUpdatedData",
          "metaurl": "#/schemagroups/Contoso.ERP.Events/schemas/purchaseOrderUpdatedData/meta",
          "meta": {
            "schemaid": "purchaseOrderUpdatedData",
            "self": "#/schemagroups/Contoso.ERP.Events/schemas/purchaseOrderUpdatedData/meta",
            "xid": "/schemagroups/Contoso.ERP.Events/schemas/purchaseOrderUpdatedData/meta",
            "epoch": 1,
            "createdat": "2025-02-26T13:09:22.902623885Z",
            "modifiedat": "2025-02-26T13:09:22.902623885Z",
            "readonly": false,
            "compatibility": "none",
            "defaultversionid": "1",
            "defaultversionurl": "#/schemagroups/Contoso.ERP.Events/schemas/purchaseOrderUpdatedData/versions/1",
            "defaultversionsticky": false
          },
          "versionsurl": "#/schemagroups/Contoso.ERP.Events/schemas/purchaseOrderUpdatedData/versions",
          "versions": {
            "1": {
              "schemaid": "purchaseOrderUpdatedData",
              "versionid": "1",
              "self": "#/schemagroups/Contoso.ERP.Events/schemas/purchaseOrderUpdatedData/versions/1",
              "xid": "/schemagroups/Contoso.ERP.Events/schemas/purchaseOrderUpdatedData/versions/1",
              "epoch": 1,
              "isdefault": true,
              "createdat": "2025-02-26T13:09:22.902623885Z",
              "modifiedat": "2025-02-26T13:09:22.902623885Z",
              "contenttype": "application/json",
              "format": "JSONSchema/draft-07",
              "schema": {
                "properties": {
                  "purchaseOrderId": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "versionscount": 1
        },
        "refundData": {
          "schemaid": "refundData",
          "self": "#/schemagroups/Contoso.ERP.Events/schemas/refundData",
          "xid": "/schemagroups/Contoso.ERP.Events/schemas/refundData",
          "metaurl": "#/schemagroups/Contoso.ERP.Events/schemas/refundData/meta",
          "meta": {
            "schemaid": "refundData",
            "self": "#/schemagroups/Contoso.ERP.Events/schemas/refundData/meta",
            "xid": "/schemagroups/Contoso.ERP.Events/schemas/refundData/meta",
            "epoch": 1,
            "createdat": "2025-02-26T13:09:22.902623885Z",
            "modifiedat": "2025-02-26T13:09:22.902623885Z",
            "readonly": false,
            "compatibility": "none",
            "defaultversionid": "1",
            "defaultversionurl": "#/schemagroups/Contoso.ERP.Events/schemas/refundData/versions/1",
            "defaultversionsticky": false
          },
          "versionsurl": "#/schemagroups/Contoso.ERP.Events/schemas/refundData/versions",
          "versions": {
            "1": {
              "schemaid": "refundData",
              "versionid": "1",
              "self": "#/schemagroups/Contoso.ERP.Events/schemas/refundData/versions/1",
              "xid": "/schemagroups/Contoso.ERP.Events/schemas/refundData/versions/1",
              "epoch": 1,
              "isdefault": true,
              "createdat": "2025-02-26T13:09:22.902623885Z",
              "modifiedat": "2025-02-26T13:09:22.902623885Z",
              "contenttype": "application/json",
              "format": "JSONSchema/draft-07",
              "schema": {
                "properties": {
                  "amount": {
                    "type": "number"
                  },
                  "orderId": {
                    "type": "string"
                  },
                  "reason": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "versionscount": 1
        },
        "returnData": {
          "schemaid": "returnData",
          "self": "#/schemagroups/Contoso.ERP.Events/schemas/returnData",
          "xid": "/schemagroups/Contoso.ERP.Events/schemas/returnData",
          "metaurl": "#/schemagroups/Contoso.ERP.Events/schemas/returnData/meta",
          "meta": {
            "schemaid": "returnData",
            "self": "#/schemagroups/Contoso.ERP.Events/schemas/returnData/meta",
            "xid": "/schemagroups/Contoso.ERP.Events/schemas/returnData/meta",
            "epoch": 1,
            "createdat": "2025-02-26T13:09:22.902623885Z",
            "modifiedat": "2025-02-26T13:09:22.902623885Z",
            "readonly": false,
            "compatibility": "none",
            "defaultversionid": "1",
            "defaultversionurl": "#/schemagroups/Contoso.ERP.Events/schemas/returnData/versions/1",
            "defaultversionsticky": false
          },
          "versionsurl": "#/schemagroups/Contoso.ERP.Events/schemas/returnData/versions",
          "versions": {
            "1": {
              "schemaid": "returnData",
              "versionid": "1",
              "self": "#/schemagroups/Contoso.ERP.Events/schemas/returnData/versions/1",
              "xid": "/schemagroups/Contoso.ERP.Events/schemas/returnData/versions/1",
              "epoch": 1,
              "isdefault": true,
              "createdat": "2025-02-26T13:09:22.902623885Z",
              "modifiedat": "2025-02-26T13:09:22.902623885Z",
              "contenttype": "application/json",
              "format": "JSONSchema/draft-07",
              "schema": {
                "properties": {
                  "items": {
                    "items": {
                      "properties": {
                        "orderId": {
                          "type": "string"
                        },
                        "productId": {
                          "type": "string"
                        },
                        "quantity": {
                          "type": "number"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "orderId": {
                    "type": "string"
                  },
                  "returnId": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "versionscount": 1
        },
        "shipmentData": {
          "schemaid": "shipmentData",
          "self": "#/schemagroups/Contoso.ERP.Events/schemas/shipmentData",
          "xid": "/schemagroups/Contoso.ERP.Events/schemas/shipmentData",
          "metaurl": "#/schemagroups/Contoso.ERP.Events/schemas/shipmentData/meta",
          "meta": {
            "schemaid": "shipmentData",
            "self": "#/schemagroups/Contoso.ERP.Events/schemas/shipmentData/meta",
            "xid": "/schemagroups/Contoso.ERP.Events/schemas/shipmentData/meta",
            "epoch": 1,
            "createdat": "2025-02-26T13:09:22.902623885Z",
            "modifiedat": "2025-02-26T13:09:22.902623885Z",
            "readonly": false,
            "compatibility": "none",
            "defaultversionid": "1",
            "defaultversionurl": "#/schemagroups/Contoso.ERP.Events/schemas/shipmentData/versions/1",
            "defaultversionsticky": false
          },
          "versionsurl": "#/schemagroups/Contoso.ERP.Events/schemas/shipmentData/versions",
          "versions": {
            "1": {
              "schemaid": "shipmentData",
              "versionid": "1",
              "self": "#/schemagroups/Contoso.ERP.Events/schemas/shipmentData/versions/1",
              "xid": "/schemagroups/Contoso.ERP.Events/schemas/shipmentData/versions/1",
              "epoch": 1,
              "isdefault": true,
              "createdat": "2025-02-26T13:09:22.902623885Z",
              "modifiedat": "2025-02-26T13:09:22.902623885Z",
              "contenttype": "application/json",
              "format": "JSONSchema/draft-07",
              "schema": {
                "properties": {
                  "courierName": {
                    "type": "string"
                  },
                  "orderId": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "trackingnumber": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "versionscount": 1
        }
      },
      "schemascount": 16
    },
    "g1": {
      "schemagroupid": "g1",
      "self": "#/schemagroups/g1",
      "xid": "/schemagroups/g1",
      "epoch": 1,
      "createdat": "2025-02-25T20:47:54.50473958Z",
      "modifiedat": "2025-02-25T20:47:54.50473958Z",
      "format": "text",
      "schemasurl": "#/schemagroups/g1/schemas",
      "schemas": {
        "popped": {
          "schemaid": "popped",
          "self": "#/schemagroups/g1/schemas/popped",
          "xid": "/schemagroups/g1/schemas/popped",
          "metaurl": "#/schemagroups/g1/schemas/popped/meta",
          "meta": {
            "schemaid": "popped",
            "self": "#/schemagroups/g1/schemas/popped/meta",
            "xid": "/schemagroups/g1/schemas/popped/meta",
            "epoch": 1,
            "createdat": "2025-02-25T20:47:54.50473958Z",
            "modifiedat": "2025-02-25T20:47:54.50473958Z",
            "readonly": false,
            "compatibility": "none",
            "defaultversionid": "v2.0",
            "defaultversionurl": "#/schemagroups/g1/schemas/popped/versions/v2.0",
            "defaultversionsticky": false
          },
          "versionsurl": "#/schemagroups/g1/schemas/popped/versions",
          "versions": {
            "v1.0": {
              "schemaid": "popped",
              "versionid": "v1.0",
              "self": "#/schemagroups/g1/schemas/popped/versions/v1.0",
              "xid": "/schemagroups/g1/schemas/popped/versions/v1.0",
              "epoch": 1,
              "isdefault": false,
              "createdat": "2025-02-25T20:47:54.50473958Z",
              "modifiedat": "2025-02-25T20:47:54.50473958Z",
              "format": "text"
            },
            "v2.0": {
              "schemaid": "popped",
              "versionid": "v2.0",
              "self": "#/schemagroups/g1/schemas/popped/versions/v2.0",
              "xid": "/schemagroups/g1/schemas/popped/versions/v2.0",
              "epoch": 1,
              "isdefault": true,
              "createdat": "2025-02-25T20:47:54.50473958Z",
              "modifiedat": "2025-02-25T20:47:54.50473958Z",
              "format": "text"
            }
          },
          "versionscount": 2
        }
      },
      "schemascount": 1
    }
  },
  "schemagroupscount": 2
}